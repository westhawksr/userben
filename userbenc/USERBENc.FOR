C---------------------------------------------------------------------
C
C     PROGRAM: USERBENC
C     FTA USER BENEFIT DATA INPUT COMPARISON PROGRAM
C
C     PARSONS BRINCKERHOFF QUADE & DOUGLAS,INC.
C     SAN FRANCISCO, CALIFORNIA
C
C--------------------------------------------------------------------
      include 'tpcom.inc'
      include 'control.inc'
      INTEGER*2    PURP,DUMMY,IO(500)
      INTEGER*2    BIZ,ZIZ,BJZ,BKC,SIZ,SJZ,AIZ,AJZ,AKC,DIZ,DJZ,IIZ,IJZ
      INTEGER*2    WMAXP(3),WMINP(3),DMAXP(3),DMINP(3),NTRN(6000,2)
      INTEGER*2    WMAXB(3),WMINB(3),DMAXB(3),DMINB(3)
      INTEGER*2    IMINB(10,3),QIZ,QJZ,QKC,IMIND(10,3),ZMINB(10,3)
      INTEGER*2    HOLD(10),COUNT,INDLRT(6000),Z2MINB(10,3)
      INTEGER*2    ZMINP(10,3),Z2MINP(10,3)
      INTEGER*2    ZONE,DIST(13),IZ
      INTEGER*4    NZON1,NCAT1,NZON2,NCAT2,STAT1
      INTEGER*4    WRECNUM,DRECNUM
      INTEGER*4    MDEWLK(6000),MDEDRV(6000),JZ
      INTEGER*4    TRPWLK,TRPDRV,NTWLK,NTDRV
      INTEGER*4    MKDIFF(6000,2,2),MKZONE(6000)
      INTEGER*4    TPURP,IRIDERS,OIZ,OJZ,TOTMTX,INDEX,TOTCAP
      INTEGER*4    DISTEQ(6000),IEQUIV(6000),EQUIV(10000)
      INTEGER*4    DFILTER(50,50)
      REAL*4       CIVT1T,CIVT1A,CIVT2T,CIVT2A
      REAL*4       BLSUM(7),ALSUM(7),WPERSON,DPERSON,TOTVAL
      REAL*4       EUTILB,EUTILA,EQVMINA,EQVMINB,EDIFF,MAXVAL
      REAL*4       TUTILB,TUTILA,TEQVMINA,TEQVMINB,TDIFF,VAL
      REAL*4       WMAXPRICE,WMINPRICE,DMAXPRICE,DMINPRICE,DIFF
      REAL*4       WMAXBENEF,WMINBENEF,DMAXBENEF,DMINBENEF
      REAL*4       XWBENEF,XDBENEF
      REAL*4       WPPRICE,WTPRICE,WBENEF,WEUSER,WNUSER,WNRIDERS,
     *             DPPRICE,DTPRICE,DBENEF,DEUSER,DNUSER,DNRIDERS,
     *             WLUSER,WLRIDERS,DLUSER,DLRIDERS,WERIDERS
      REAL*4       WMINBF(10),QMINBF,DMINBF(10),ZMINBF(10),Z2MINBF(10)
      REAL*4       ZMINBP(10),Z2MINBP(10)
      REAL*4       XMINBP(10),X2MINBP(10),QMINBX
      REAL*4       OBEN(6000,4,2,6),OUTBIN(48)
      REAL*4       XBEN(6000,2,6),OUTBEN(12)
      REAL*8       UBEN(4,3,7),TRID(4,3,7),UBPT(4,3,7)
      REAL*8       NBEN(4,3,7),NBPT(4,3,7),CBEN(3,7)  
      REAL*8       ERIDERSW,ERIDERSD,TERIDERS
      CHARACTER*1  ANS,YES(2)
      CHARACTER*6  TPURP1,TDAY1,TPURP2,TDAY2
      CHARACTER*60 ALTNAME1,ALTNAME2
      CHARACTER*80 BASECASE,BUILDCASE,LRTIND,TRPOUT,CONTROL,USROUT
      CHARACTER*80 CAPOUT,FDISTEQ,NEMFILE
      LOGICAL      EXISTS,NEG,INDMTX,NOTRN,MKTDIF,DISTONE
      LOGICAL      OUTMTX,OUTWLK,CSORT,RHETT,LIZ,LJZ,NEM
      LOGICAL      BINOUT,CTLERR(2),TOPTEN,OUTCAP,DISTEQV
      LOGICAL      MSEG(6),SFILTER
      DATA         YES/'Y','y'/
      NAMELIST  /PARAMS/ MAXVAL,SIZ,SJZ,NEG,NOTRN,OUTWLK,
     *                   TOPTEN,DIZ,DJZ,DISTONE,MSEG
      ZIZ=0
      WMAXPRICE=0.0
      WMINPRICE=0.0
      DMAXPRICE=0.0
      DMINPRICE=0.0
      WMAXBENEF=0.0
      WMINBENEF=0.0
      DMAXBENEF=0.0
      DMINBENEF=0.0
      TOTVAL=0.0     
      DRECNUM=0
      WRECNUM=0
      ERIDERSW=0.0
      ERIDERSD=0.0
      TERIDERS=0.0
      QIZ=0
      QJZ=0
      RHETT=.FALSE.
      BINOUT=.FALSE.
      OUTCAP=.FALSE.
      DIZ=0
      DJZ=0
      DISTONE=.FALSE.
      DIST=0
      SIZ=0
      SJZ=0
      MSEG=.TRUE.
C
C     OPEN AND READ THE CONTROL FILE
C
      CALL GETARG(1,CONTROL,STAT1)
      IF(STAT1.LE.0) THEN
        WRITE(*,'('' USERBENC (F) : CONTROL FILE NOT SPECIFIED'')')
        STOP " ENTER THE CONTROL FILE NAME ON THE COMMAND LINE."
      END IF
      OPEN(10,FILE=CONTROL,STATUS='OLD',FORM='FORMATTED',
     *     ERR=90)
      REWIND 10
      GO TO 91
   90 WRITE(*,9510)
 9510 FORMAT(/,1X,'USERBENC 9510 (F) ERROR OPENING CONTROL CARD INPUT ',
     *       'FILE')
      STOP 8
   91 CALL RDFILES(CTLERR(1),INDMTX,BASECASE,BUILDCASE,LRTIND,TRPOUT,
     *           USROUT,CAPOUT,OUTCAP,FDISTEQ,IEQUIV,EQUIV,NEMFILE,NEM,
     *           DFILTER,SFILTER)
      REWIND 10
      READ(10,PARAMS,ERR=9)
      REWIND 10
      GO TO 10
    9 CTLERR(2)=.TRUE.
C
C     CLOSE THE CONTROL FILE AND OPEN THE STATION ERROR FILE;
C
   10 CLOSE(10,STATUS='KEEP')
      IF(CTLERR(1).OR.CTLERR(2)) THEN
      WRITE(26,9702) 
 9702 FORMAT(//1X,'ERROR ENCOUNTERED IN READING CONTROL FILE',
     *            ' PARAMETERS'/)
      STOP 16
      END IF
      WRITE(26,9701) MAXVAL,SIZ,SJZ,NEG,NOTRN,OUTWLK,TOPTEN,DIZ,DJZ,
     *               DISTONE,MSEG
 9701 FORMAT(/1X,'MAXVAL =',F5.0,T40,' TRANSIT PRICE THRESHOLD'/,
     *       1X,'SIZ    =',I4,T40,' SELECTED ORIGIN ZONE'/
     *       1X,'SJZ    =',I4,T40,' SELECTED DESTINATION ZONE'/
     *       1X,'NEG    =',3X,L1,T40,' REMOVE NEGATIVE BENEFITS'/
     *       1X,'NOTRN  =',3X,L1,T40,' NO TRANSIT TO TRANSIT MATRIX'/
     *       1X,'OUTWLK =',3X,L1,T40,' WALK/DRIVE TRIP OUTPUT'/
     *       1X,'TOPTEN =',3X,L1,T40,' GENERATE TOP TEN POSITIVE'/
     *       1X,'DIZ    =',I4,T40,' SELECTED ORIGIN DISTRICT'/
     *       1X,'DJZ    =',I4,T40,' SELECTED DESTINATION DISTRICT'/
     *       1X,'DISTONE=',3X,L1,T40,' ONE ZONE PER DISTRICT'/
     *       1X,'MSEG   =',3X,L1,5(1X,L1),T40,
     *                   ' MARKET SEGMENT SELECTION'/)
	    IF(NEG) WRITE(*,9022)
	    IF(NEG) WRITE(26,9022)
 9022 FORMAT(/1X,'All Negative User Benefit Interchanges',
     *           ' Will Be Reset to Baseline Mode Share'/)
C
C SET MAXIMUM VALUE INDICATORS
C
      IF(MAXVAL.GT.0) VAL=MAXVAL
C
      IF(SIZ.GT.0) SIZ=EQUIV(SIZ)
      IF(SJZ.GT.0) SJZ=EQUIV(SJZ)
C
C VERIFY EXISTENCE OF INPUT FILES
C
      INQUIRE(FILE=BASECASE,EXIST=EXISTS)
      IF(.NOT.EXISTS) THEN
      WRITE(*,9004) BASECASE
 9004 FORMAT(/1X,'Baseline User Benefit File ',A80/
     *           ' Does Not Exist'/)
      STOP 8
      END IF
      INQUIRE(FILE=BUILDCASE,EXIST=EXISTS)
      IF(.NOT.EXISTS) THEN
      WRITE(*,9009) BUILDCASE
 9009 FORMAT(/1X,'Build User Benefit File ',A80/
     *           ' Does Not Exist'/)
      STOP 8
      END IF
      INQUIRE(FILE=LRTIND,EXIST=EXISTS)
      IF(EXISTS) THEN
      INDMTX=.TRUE.
      END IF
C
C  OPEN AND STORE DISTRICT-EQUIVALENCE DATA IF PROVIDED
C
      INQUIRE(FILE=FDISTEQ,EXIST=EXISTS)
      IF(EXISTS) THEN
      DISTEQV=.TRUE.
      OPEN(23,FILE=FDISTEQ,STATUS='OLD',FORM='FORMATTED')
 9616 CONTINUE
      IF(DISTONE) THEN
      READ(23,*,END=9618) ZONE,DIST(1)
      ELSE
      READ(23,*,END=9618) ZONE,DIST
      END IF
      IF(ZONE.LE.0) GO TO 9618
      DISTEQ(DIST(1))=ZONE
      DO 9619 K=2,13
      IF(DIST(K).EQ.0) GO TO 9616
      IF(DIST(K).LT.0) THEN
      K1=DIST(K-1)
      K2=IABS(DIST(K))
      DO 9620 K3=K1,K2
      DISTEQ(K3)=ZONE
 9620 CONTINUE
      ELSE
      DISTEQ(DIST(K))=ZONE
      END IF
 9619 CONTINUE
      GO TO 9616
 9618 CONTINUE
      END IF
C
C OPEN ALL FILES
C
      OPEN(1,FILE=BASECASE,STATUS='OLD',FORM='BINARY')
      OPEN(2,FILE=BUILDCASE,STATUS='OLD',FORM='BINARY')
      IF(NEG) THEN
      OPEN(3,FILE='BASEREV.BIN',STATUS='UNKNOWN',FORM='BINARY')
      OPEN(4,FILE='BULDREV.BIN',STATUS='UNKNOWN',FORM='BINARY')
      END IF
      IF(USROUT.NE.' ') THEN
      OPEN(8,FILE=USROUT,STATUS='UNKNOWN',FORM='BINARY')
      BINOUT=.TRUE.
      END IF
      IF(OUTCAP) THEN
      OPEN(12,FILE=CAPOUT,STATUS='UNKNOWN',FORM='BINARY')
      END IF
      IF(INDMTX) THEN
      OPEN(11,FILE=LRTIND,STATUS='OLD',FORM='UNFORMATTED')
      READ(11) HEAD1,HEAD2
       IF(NUMPUR.NE.2) THEN
       WRITE(*,16) NUMPUR
   16  FORMAT(//' WARNING -- NUMBER OF TABLES IN MODE INDICATOR',
     *          ' MATRIX (',
     *        I2,') NE 2')
       IF(NUMPUR.LT.1.OR.NUMPUR.GT.2) STOP 16
       END IF
       WRITE(26,7207) LRTIND
 7207 FORMAT(//2X,'PRIMARY MODE INDICATOR MATRIX FILE INFORMATION',/
     *         2X,'----------------------------------------------',/
     *       2X,'INPUT FILE NAME=',A40,' TRANPLAN FORMAT')
      WRITE(26,7201) FNAME,FUNCT,GDATE,GTIME,FTYPE,GNAME
 7201 FORMAT(2X,'FNAME=',1X,A8,1X,4A8,/
     *       2X,'FUNCT=',1X,4A8,/,
     *       2X,'GDATE=',1X,A8,/,
     *       2X,'GTIME=',1X,A8,/,
     *       2X,'FTYPE=',1X,A8,/,
     *       2X,'GNAME=',1X,A8)
       OPEN(35,FILE='MODEIND.ASC',STATUS='UNKNOWN',
     *         FORM='FORMATTED')
      END IF
      OPEN(27,FILE='USERBENC.ERR',STATUS='UNKNOWN',
     *        FORM='FORMATTED')
      OPEN(28,FILE='ZEROSHR.RPT',STATUS='UNKNOWN',
     *        FORM='FORMATTED')
      WRITE(28,15)
   15 FORMAT(' THE FOLLOWING INTERCHANGES CONTAIN ',
     *       'AN UNEXPECTED ZERO PROBABILITY FOR EITHER',
     *       ' THE BASELINE OR BUILD ALTERNATIVE'/
     *       ' -----------------------------------',
     *       '-----------------------------------------',
     *       '----------------------------------'/)
      OPEN(29,FILE='PROPORT.RPT',STATUS='UNKNOWN',
     *        FORM='FORMATTED')
      WRITE(29,17)
   17 FORMAT(' THE FOLLOWING RECORDS HAVE A MARKET SHARE GREATER',
     *       ' THAN 1.0'/
     *       ' -------------------------------------------------',
     *       '---------'/)
      OPEN(30,FILE='MKTDIFF.RPT',STATUS='UNKNOWN',
     *        FORM='FORMATTED')
      WRITE(30,18)
   18 FORMAT(' THE FOLLOWING RECORDS CONTAIN A DIFFERENCE IN ',
     *       'MARKET SHARE'/
     *       ' ----------------------------------------------',
     *       '------------'/)
      OPEN(31,FILE='WALKPRICE.RPT',STATUS='UNKNOWN',
     *        FORM='FORMATTED')
      OPEN(71,FILE='WALKPRICE.CSV',STATUS='UNKNOWN',
     *        FORM='FORMATTED')
      WRITE(31,13)
   13 FORMAT(' WALK/DRIVE INTERCHANGES WHICH EXCEED THE ',
     *       'TRANSIT PRICE THRESHOLD '/
     *       ' -----------------------------------------',
     *       '-----------------------')
      WRITE(71,113)
  113 FORMAT('IZ,JZ,K,PRICE_DIFF,TOTAL_PERSON_TRIPS,
     *       MARKET SHARE')
      OPEN(32,FILE='DRIVPRICE.RPT',STATUS='UNKNOWN',
     *        FORM='FORMATTED')
      WRITE(32,14)
   14 FORMAT(' MUST DRIVE INTERCHANGES WHICH EXCEED THE ',
     *       'TRANSIT PRICE THRESHOLD '/
     *       ' -----------------------------------------',
     *       '-----------------------')
      OPEN(33,FILE='NT_CW.RPT',STATUS='UNKNOWN',
     *        FORM='FORMATTED')
      WRITE(33,11)
   11 FORMAT(' THE FOLLOWING INTERCHANGES ARE DEFINED ',
     *       'AS NO TRANSIT IN THE BASELINE, BUT PROVIDE ',
     *       'CAN-WALK/DRIVE TRANSIT IN THE BUILD'/
     *       ' ---------------------------------------',
     *       '-------------------------------------------',
     *       '-----------------------------------'/)
      OPEN(34,FILE='NT_MD.RPT',STATUS='UNKNOWN',
     *        FORM='FORMATTED')
      WRITE(34,12)
   12 FORMAT(' THE FOLLOWING INTERCHANGES ARE DEFINED ',
     *       'AS NO TRANSIT IN THE BASELINE, BUT PROVIDE ',
     *       'MUST DRIVE TRANSIT IN THE BUILD'/
     *       ' ---------------------------------------',
     *       '-------------------------------------------',
     *       '-------------------------------'/)
      IF(NOTRN) OPEN(36,FILE='NOTRN.ASC',STATUS='UNKNOWN',
     *          FORM='FORMATTED')
      IF(INDMTX) THEN
      OPEN(38,FILE='NOLRT.RPT',STATUS='UNKNOWN',
     *        FORM='FORMATTED')
      WRITE(38,19)
   19 FORMAT(' THE FOLLOWING INTERCHANGES DISPLAY USER ',
     *       'BENEFITS BUT URBAN RAIL SERVICE IS NOT AVAILABLE'/
     *       '-----------------------------------------',
     *       '------------------------------------------------')
      END IF
      OPEN(39,FILE='NEGSHR.RPT',STATUS='UNKNOWN',
     *        FORM='FORMATTED')
      WRITE(39,20)
   20 FORMAT(' THE FOLLOWING INTERCHANGES HAVE A NEGATIVE TRANSIT',
     *       ' SHARE'/
     *       ' --------------------------------------------------',
     *       ' -----')
      IF(TRPOUT.NE.' ') THEN
      OPEN(40,FILE=TRPOUT,STATUS='UNKNOWN',FORM='FORMATTED')
      OUTMTX=.TRUE.
      END IF
      IF((SIZ.GT.0.AND.SJZ.LE.0).OR.(SIZ.LE.0.AND.SJZ.GT.0)) THEN
      TOPTEN=.FALSE.
      OPEN(41,FILE='SELZONE_TOPTEN.RPT',STATUS='UNKNOWN',
     *        FORM='FORMATTED')
      RHETT=.TRUE.
      IF(SIZ.GT.0.AND.SJZ.LE.0) LIZ=.TRUE.
      IF(SIZ.LE.0.AND.SJZ.GT.0) LJZ=.TRUE.
C     OPEN(42,FILE='SELZONE_DETAIL.RPT',STATUS='UNKNOWN',
C    *        FORM='FORMATTED')
      OPEN(43,FILE='SELZONE_DETAIL.CSV',STATUS='UNKNOWN',
     *        FORM='FORMATTED')
      WRITE(43,21)
   21 FORMAT('PZONE,AZONE,MKTSEG,PER_TRIPS,WALK_DRIVE_BEN,',
     *       'DRIVE_ONLY_BEN')
      END IF
C
C READ HEADER FILES & COMPARE
C
      READ(1,ERR=2) NZON1,NCAT1,CIVT1T,CIVT1A,TPURP1,TDAY1,ALTNAME1
      IF(NEG) WRITE(3) NZON1,NCAT1,CIVT1T,CIVT1A,TPURP1,TDAY1,ALTNAME1
      GO TO 3
    2 WRITE(26,9013) NZON1,NCAT1,CIVT1T,CIVT1A,TPURP1,TDAY1,
     *               ALTNAME1
      STOP
    3 WRITE(26,9013) NZON1,NCAT1,CIVT1T,CIVT1A,TPURP1,TDAY1,
     *               ALTNAME1
      WRITE(*,9013)  NZON1,NCAT1,CIVT1T,CIVT1A,TPURP1,TDAY1,
     *               ALTNAME1
 9013 FORMAT(//1X,' BASELINE INPUT FILE SUMMARY STATISTICS'/
     *   1X,'----------------------------------------------------'/
     *   1X,' ZONES                       ',2X,I4/
     *   1X,' MARKETS                     ',2X,I4/
     *   1X,' TRANSIT IN-VEHICLE COEFF    ',F8.4/
     *   1X,' AUTO    IN-VEHICLE COEFF    ',F8.4/
     *   1X,' TRIP PURPOSE                ',1X,A6/
     *   1X,' TIME PERIOD                 ',1X,A6/
     *   1X,' ALTERNATIVE NAME            ',1X,A60//)
      READ(2,ERR=4) NZON2,NCAT2,CIVT2T,CIVT2A,TPURP2,TDAY2,ALTNAME2
      IF(NEG) WRITE(4) NZON2,NCAT2,CIVT2T,CIVT2A,TPURP2,TDAY2,ALTNAME2
      GO TO 5
    4 WRITE(26,9014) NZON2,NCAT2,CIVT2T,CIVT2A,TPURP2,TDAY2,
     *               ALTNAME2
      STOP
    5 WRITE(26,9014) NZON2,NCAT2,CIVT2T,CIVT2A,TPURP2,TDAY2,
     *               ALTNAME2
      WRITE(*,9014)  NZON2,NCAT2,CIVT2T,CIVT2A,TPURP2,TDAY2,
     *               ALTNAME2
 9014 FORMAT(//1X,' BUILD INPUT FILE SUMMARY STATISTICS'/
     *   1X,'----------------------------------------------------'/
     *   1X,' ZONES                       ',2X,I4/
     *   1X,' MARKETS                     ',2X,I4/
     *   1X,' TRANSIT IN-VEHICLE COEFF    ',F8.4/
     *   1X,' AUTO    IN-VEHICLE COEFF    ',F8.4/
     *   1X,' TRIP PURPOSE                ',1X,A6/
     *   1X,' TIME PERIOD                 ',1X,A6/
     *   1X,' ALTERNATIVE NAME            ',1X,A60//)
      IF(NZON1.GT.6000) THEN
      WRITE(26,9053) NZON1
 9053 FORMAT(' NUMBER OF ZONES (',I4,') IS GREATER THAN 6,000'/)
      WRITE(*,9053) NZON1
      STOP
      END IF
      IF(NCAT1.GT.6) THEN
      WRITE(26,9050) NCAT1
 9050 FORMAT(' NUMBER OF MARKET SEGMENTS (',I2,') IS GREATER THAN 6'/)
      STOP
      END IF
      TOTMTX=8*NCAT1  
      TOTCAP=2*NCAT1  
      IF(BINOUT) WRITE(26,9055) TOTMTX    
 9055 FORMAT(/1X,'TOTAL NUMBER OF OUTPUT MATRICES=',I2)
      IF(OUTCAP) WRITE(26,9056) TOTCAP
 9056 FORMAT(/1X,'TOTAL NUMBER OF EXCESS BENEFIT MATRICES=',I2)
      IF(NCAT1.NE.NCAT2.OR.NZON1.NE.NZON2) THEN
      WRITE(26,9051)
 9051 FORMAT(' NUMBER OF ZONES OR CATEGORIES NOT EQUAL'/)
      STOP
      END IF
      IZ=0
      OIZ=1
      INDEX=1
C --------------------------------------------------
C READ LOGSUM FILE RECORDS
C --------------------------------------------------
    1 READ(1,END=200) BIZ,BJZ,BKC,BLSUM
      READ(2,END=200) AIZ,AJZ,AKC,ALSUM
      IF((BIZ.GT.ZIZ).AND.(MOD(BIZ,100).EQ.0)) THEN
      WRITE(*,8002) BIZ
      ZIZ=BIZ
      END IF
 8002 FORMAT(1X,'Processing Origin Zone ',I4)
      IF(.NOT.MSEG(BKC)) GO TO 1
      IF(BIZ.NE.AIZ.OR.BJZ.NE.AJZ.OR.BKC.NE.AKC) THEN
      WRITE(26,9052) BIZ,BJZ,BKC,AIZ,AJZ,AKC
 9052 FORMAT(' INCONSISTENT RECORD MATCH',1X,
     *       ' BASELINE IZ=',I4,' JZ=',I4,' K=',I1,1X,
     *       ' BUILD    IZ=',I4,' JZ=',I4,' K=',I1,
     *       ' RUN USERBENP FOR FIX')
      STOP 9052
      END IF 
C
C READ MODAL INDICATOR MATRICES
C
      IF(BIZ.GT.IZ.AND.INDMTX) THEN
      IZ=BIZ
      PURP=1
	    CALL INTAB(11,MDEWLK,IZ,PURP,DUMMY,IO)
	    PURP=2
	    IF(NUMPUR.EQ.2) CALL INTAB(11,MDEDRV,IZ,PURP,DUMMY,IO)
	    END IF
C
C OUTPUT USER BENEFIT VALUES FOR PREVIOUS ROW NOW COMPLETED
C
      IF((BIZ.GT.OIZ).AND.(BINOUT.OR.OUTCAP)) THEN
   50 CONTINUE
      DO 45 OJZ=1,NZON1
      DO 46 K1=1,2
      DO 47 K2=1,4
      DO 48 K3=1,NCAT1
      M=4*NCAT1*(K1-1)+NCAT1*(K2-1)+K3
      OUTBIN(M)=OBEN(OJZ,K2,K1,K3)
      OBEN(OJZ,K2,K1,K3)=0.0
       IF(K2.EQ.1) THEN
       M=NCAT1*(K1-1)+K3
       OUTBEN(M)=XBEN(OJZ,K1,K3)
       XBEN(OJZ,K1,K3)=0.0
       END IF
   48 CONTINUE
   47 CONTINUE
   46 CONTINUE
      IF(BINOUT) WRITE(8) OIZ,OJZ,(OUTBIN(K4),K4=1,TOTMTX)
      IF(OUTCAP) WRITE(12) OIZ,OJZ,(OUTBEN(K5),K5=1,TOTCAP)
   45 CONTINUE
       IF(BIZ.GT.INDEX) THEN
       INDEX=INDEX+1
       OIZ=INDEX
       END IF
      IF(INDEX.LT.BIZ) GO TO 50
      END IF
C
C CONSIDER RECORDS ONLY FOR SELECTED DISTRICTS
C
      IF(DISTEQV.AND.DIZ.GT.0.AND.DJZ.GT.0) THEN
      IIZ=DISTEQ(BIZ)
      IJZ=DISTEQ(BJZ)
      IF(DIZ.NE.IIZ.OR.DJZ.NE.IJZ) GO TO 1
      END IF     
C 
C FILTER RESULTS (IF FILTER FILE PROVIDED)
C
      IF(SFILTER) THEN
      IIZ=DISTEQ(BIZ)
      IJZ=DISTEQ(BJZ)
      IF(DFILTER(IIZ,IJZ).LT.1) GO TO 1
      END IF
C--------------------------------------------------------------
C
C SELECTED INTERCHANGE PRINT
C
      IF(SIZ.EQ.BIZ.AND.SJZ.EQ.BJZ) THEN
      WRITE(26,7001) IEQUIV(BIZ),IEQUIV(BJZ),BKC,
     *              ((BLSUM(K),ALSUM(K)),K=2,7)
 7001 FORMAT(//' BASIC INPUT DATA SUMMARY'/
     *         ' ------------------------'/
     *       ' IZ=',I4,' JZ=',I4,' BKC=',I1/
     *       ' PER  TRP=',2X,F15.6,2X,F15.6/
     *       ' AUTO EXP=',2X,F15.6,2X,F15.6/
     *       ' WPER MKT=',2X,F15.2,2X,F15.2/
     *       ' WALK SHR=',2X,F15.6,2X,F15.6/
     *       ' DPER MKT=',2X,F15.2,2X,F15.2/
     *       ' DRV  SHR=',2X,F15.6,2X,F15.6/)
      END IF
C -----------------------------------------------------------------------
C
C CHECK FOR NEGATIVE TRANSIT SHARE
C
       IF(BLSUM(5).LT.0) THEN
       WRITE(39,8139) BIZ,BJZ,BKC,BLSUM
 8139  FORMAT(' IZ=',I4,' JZ=',I4,' K=',I1,' BLSUM=',7(1X,F10.5))
       BLSUM(5)=0.0
       END IF
       IF(BLSUM(7).LT.0) THEN
       WRITE(39,8139) BIZ,BJZ,BKC,BLSUM
       BLSUM(7)=0.0
       END IF
       IF(ALSUM(5).LT.0) THEN
       WRITE(39,8140) BIZ,BJZ,BKC,ALSUM
 8140  FORMAT(' IZ=',I4,' JZ=',I4,' K=',I1,' ALSUM=',7(1X,F10.5))      
       ALSUM(5)=0.0
       END IF
       IF(ALSUM(7).LT.0) THEN
       WRITE(39,8140) BIZ,BJZ,BKC,ALSUM
       ALSUM(7)=0.0
       END IF
C
C CHECK FOR ZERO TRANSIT SHARE
C
       IF(BLSUM(5).GT.0.0.AND.ALSUM(5).EQ.0.0.AND.BLSUM(1).GT.0.AND.
     *    BLSUM(4).GT.0) THEN
        WRITE(28,8009) BIZ,BJZ,BKC,BLSUM(5),ALSUM(5),BLSUM(1),BLSUM(4)
 8009   FORMAT(' IZ=',I4,' JZ=',I4,' K=',I1,
     *         ' BASE PROB=',E10.4,' BUILD PROB=',E10.4,
     *         ' TOTAL PERSON TRIPS=',F8.4,' WALK/DRIVE MARKET SHARE=',
     *          F8.4)
       IF(NEG) ALSUM(5)=BLSUM(5)
       END IF
       IF(ALSUM(5).GT.0.0.AND.BLSUM(5).EQ.0.0.AND.BLSUM(1).GT.0.AND.
     *    BLSUM(4).GT.0) THEN
        WRITE(28,8009) BIZ,BJZ,BKC,BLSUM(5),ALSUM(5),BLSUM(1),BLSUM(4)
C        BLSUM(5)=ALSUM(5)
       END IF
       IF(BLSUM(7).GT.0.0.AND.ALSUM(7).EQ.0.0.AND.BLSUM(1).GT.0.AND.
     *    BLSUM(6).GT.0) THEN
        WRITE(28,8010) BIZ,BJZ,BKC,BLSUM(7),ALSUM(7),BLSUM(1),BLSUM(6)
 8010   FORMAT(' IZ=',I4,' JZ=',I4,' K=',I1,
     *         ' BASE PROB=',E10.4,' BUILD PROB=',E10.4,
     *         ' TOTAL PERSON TRIPS=',F8.4,
     *         ' DRIVE ONLY MARKET SHARE=',F8.4)
       IF(NEG) ALSUM(7)=BLSUM(7)
       END IF
       IF(ALSUM(7).GT.0.0.AND.BLSUM(7).EQ.0.0.AND.BLSUM(1).GT.0.AND.
     *    BLSUM(6).GT.0) THEN
        WRITE(28,8010) BIZ,BJZ,BKC,BLSUM(7),ALSUM(7),BLSUM(1),BLSUM(6)
C        BLSUM(7)=ALSUM(7)
       END IF
C 
C CHECK FOR SHIFT FROM NO TRANSIT TO EITHER WALK/DRIVE OR MUST DRIVE
C
      IF(BLSUM(5).EQ.0.0.AND.BLSUM(7).EQ.0.0.AND.
     *   ALSUM(5).GT.0.0.AND.ALSUM(1).GT.0.AND.ALSUM(4).GT.0) THEN
      WRITE(33,8015) BIZ,BJZ,BKC,BLSUM(5),BLSUM(7),ALSUM(5),ALSUM(7),
     *               ALSUM(1),ALSUM(4),ALSUM(6)
 8015 FORMAT(' IZ=',I4,' JZ=',I4,' K=',I1,' BASELINE SHARES=',
     *       2(1X,F10.5),' BUILD SHARES=',2(1X,F10.5),
     *       ' TOTAL PERSON TRIPS=',F8.4,' MARKET SHARES=',
     *       2(1X,F8.4))
      NTRN(BIZ,1)=1
      NTRN(BJZ,2)=1
      NTWLK=IFIX(BLSUM(1)*BLSUM(4)*ALSUM(5)*1000.0)
      IF(NOTRN.AND.NTWLK.GT.0) WRITE(36,8901) BIZ,BJZ,NTWLK
      NTWLK=0
 8901 FORMAT(2I5,'  1',I7)
      END IF
      IF(BLSUM(5).EQ.0.0.AND.BLSUM(7).EQ.0.0.AND.
     *   ALSUM(7).GT.0.0.AND.ALSUM(1).GT.0.AND.ALSUM(6).GT.0) THEN
      WRITE(34,8015) BIZ,BJZ,BKC,BLSUM(5),BLSUM(7),ALSUM(5),ALSUM(7),
     *               ALSUM(1),ALSUM(4),ALSUM(6)
      NTRN(BIZ,1)=1
      NTRN(BJZ,2)=1
C     NTDRV=IFIX(BLSUM(1)*BLSUM(4)*ALSUM(7)*1000.0) --> Error discoverd by Christi
      NTDRV=IFIX(BLSUM(1)*BLSUM(6)*ALSUM(7)*1000.0)
      IF(NOTRN.AND.NTDRV.GT.0) WRITE(36,8902) BIZ,BJZ,NTDRV
 8902 FORMAT(2I5,'  2',I7)
      NTDRV=0
      END IF
C
C CHECK FOR ERRORS IN MARKET PROPORTION VALUES
C
      IF(BLSUM(4).GT.1.01) WRITE(29,8001) BIZ,BJZ,BKC,BLSUM,ALSUM
C     IF(BLSUM(5).GT.0.99.AND.(BLSUM(1)*BLSUM(4)).GT.0) THEN
C     WRITE(29,8001) BIZ,BJZ,BKC,BLSUM,ALSUM
C      BLSUM(5)=0.99
C     END IF
      IF(BLSUM(5).GE.0.99) BLSUM(5)=0.99
      IF(BLSUM(6).GT.1.01) WRITE(29,8001) BIZ,BJZ,BKC,BLSUM,ALSUM
C     IF(BLSUM(7).GT.0.99.AND.(BLSUM(1)*BLSUM(6)).GT.0) THEN
C     WRITE(29,8001) BIZ,BJZ,BKC,BLSUM,ALSUM
C      BLSUM(7)=0.99
C     END IF
      IF(BLSUM(7).GE.0.99) BLSUM(7)=0.99
 8001 FORMAT(' IZ=',I4,' JZ=',I4,' MRK=',I1,
     *       ' BLSUM=',2F10.5,F10.6,4F10.5/
     *    23X,'ALSUM=',2F10.5,F10.6,4F10.5)
      IF(ALSUM(4).GT.1.01) WRITE(29,8003) AIZ,AJZ,AKC,ALSUM,BLSUM
C     IF(ALSUM(5).GT.0.99.AND.(ALSUM(1)*ALSUM(4)).GT.0) THEN
C     WRITE(29,8003) AIZ,AJZ,AKC,ALSUM,BLSUM
C      ALSUM(5)=0.99
C     END IF
      IF(ALSUM(5).GE.0.99) ALSUM(5)=0.99
      IF(ALSUM(6).GT.1.01) WRITE(29,8003) AIZ,AJZ,AKC,ALSUM,BLSUM
C     IF(ALSUM(7).GT.0.99.AND.(ALSUM(1)*ALSUM(6)).GT.0) THEN
C     WRITE(29,8003) AIZ,AJZ,AKC,ALSUM,BLSUM
C      ALSUM(7)=0.99
C     END IF
      IF(ALSUM(7).GE.0.99) ALSUM(7)=0.99
 8003 FORMAT(' IZ=',I4,' JZ=',I4,' MRK=',I1,
     *       ' ALSUM=',2F10.5,F10.6,4F10.5/
     *    23X,'BLSUM=',2F10.5,F10.6,4F10.5) 
C 
C EVALUATE TOTAL NUMBER OF PERSON TRIPS
C
      IF(BLSUM(1).NE.ALSUM(1)) THEN
      WRITE(27,8004) BIZ,BJZ,BKC,BLSUM(1),ALSUM(1)
 8004 FORMAT(' TOTAL PERSON TRIP ERROR IZ=',I4,' JZ=',I4,' K=',I1,
     *       ' BASE(1)=',F15.6,' BUILD(1)=',F15.6)
      END IF
C 
C EVALUATE TOTAL NUMBER OF MOTORIZED PERSON TRIPS
C
      IF(BLSUM(2).NE.ALSUM(2)) THEN
C     WRITE(27,8005) BIZ,BJZ,BKC,BLSUM(2),ALSUM(2)
 8005 FORMAT(' MOTORIZED PERSON TRIP ERROR IZ=',I4,' JZ=',I4,' K=',I1,
     *       ' BASE(2)=',F15.6,' BUILD(2)=',F15.6)
      END IF
C
C COMPARE EXPONENTIATED AUTO UTILITY
C
      IF(BLSUM(3).NE.ALSUM(3)) THEN
      WRITE(27,8006) BIZ,BJZ,BKC,BLSUM(3),ALSUM(3)
 8006 FORMAT(' AUTO UTILITY ERROR IZ=',I4,' JZ=',I4,' K=',I1,
     *       ' BASE=',F8.4,' BUILD=',F8.4)
      END IF
C
C EVALUATE MARKET SHARE FOR WALK/DRIVE TO TRANSIT
C
      IF(BLSUM(4).NE.ALSUM(4)) THEN
      WRITE(30,8007) BIZ,BJZ,BKC,BLSUM(4),ALSUM(4)
 8007 FORMAT(' DIFF IN WALK/DRIVE MARKET IZ=',I4,' JZ=',I4,' K=',I1,
     *       ' BASE=',F10.6,' BUILD=',F10.6)
      MKDIFF(BIZ,1,1)=MKDIFF(BIZ,1,1)+1
      MKDIFF(BJZ,2,1)=MKDIFF(BJZ,2,1)+1
      MKTDIF=.TRUE.
      END IF
      IF(BLSUM(6).NE.ALSUM(6)) THEN
      WRITE(30,8011) BIZ,BJZ,BKC,BLSUM(6),ALSUM(6)
 8011 FORMAT(' DIFF IN MUST DRIVE MARKET IZ=',I4,' JZ=',I4,' K=',I1,
     *       ' BASE=',F10.6,' BUILD=',F10.6)
      MKDIFF(BIZ,1,2)=MKDIFF(BIZ,1,2)+1
      MKDIFF(BJZ,2,2)=MKDIFF(BJZ,2,2)+1
      MKTDIF=.TRUE.
      END IF
C==================================================================================
C
C COMPUTE BASELINE AND BUILD TRANSIT PRICE FOR WALK/DRIVE MARKET
C
      EUTILB=(BLSUM(3)/(1.0-BLSUM(5)))-BLSUM(3)
      EUTILA=(ALSUM(3)/(1.0-ALSUM(5)))-ALSUM(3)
      EQVMINB=0.0
      EQVMINA=0.0
      IF(EUTILB.NE.0.0) EQVMINB=ALOG(EUTILB)/CIVT1T
      IF(EUTILA.NE.0.0) EQVMINA=ALOG(EUTILA)/CIVT1T
      EDIFF=EQVMINB-EQVMINA
      IF(EQVMINB.EQ.0.0.OR.EQVMINA.EQ.0.0) EDIFF=0.0
C
C COMPUTE CHANGE IN TOTAL PRICE
C
      TUTILB=EUTILB+BLSUM(3)
      TUTILA=EUTILA+ALSUM(3)
      TEQVMINB=0.0
      TEQVMINA=0.0
      IF(TUTILB.NE.0.0) TEQVMINB=ALOG(TUTILB)/CIVT1T
      IF(TUTILA.NE.0.0) TEQVMINA=ALOG(TUTILA)/CIVT1T
      TDIFF=TEQVMINB-TEQVMINA
      WTPRICE=EDIFF
      WPPRICE=TDIFF
C -----------------------------------------------------------------
      IF(SIZ.EQ.BIZ.AND.SJZ.EQ.BJZ) THEN
      WPERSON=BLSUM(2)*BLSUM(4)
      WRITE(26,8013) IEQUIV(BIZ),IEQUIV(BJZ),BKC,
     *               WPERSON,EUTILB,EUTILA,
     *               EQVMINB,EQVMINA,EDIFF,
     *               TUTILB,TUTILA,TEQVMINB,
     *               TEQVMINA,TDIFF
 8013 FORMAT(/' WALK/DRIVE MARKET PRICE COMPUTATIONS'/
     *        ' ------------------------------------'/
     *        1X,'SELECTED IZ=',I4,' JZ=',I4,' K=',I1/
     *        1X,'PERSON TRIPS                       =',F15.4/
     *        1X,'BASE  TRANSIT EXPONENTIATED UTILITY=',E15.4/
     *        1X,'BUILD TRANSIT EXPONENTIATED UTILITY=',E15.4/
     *        1X,'BASE  EQ IVT MINUTES OF TRAVEL TIME=',F15.4/
     *        1X,'BUILD EQ IVT MINUTES OF TRAVEL TIME=',F15.4/
     *        1X,'CHANGE IN TRANSIT PRICE            =',F15.4//
     *        1X,'BASE  TOTAL   EXPONENTIATED UTILITY=',E15.4/
     *        1X,'BUILD TOTAL   EXPONENTIATED UTILITY=',E15.4/
     *        1X,'BASE  EQ IVT MINUTES OF TRAVEL TIME=',F15.4/
     *        1X,'BUILD EQ IVT MINUTES OF TRAVEL TIME=',F15.4/
     *        1X,'CHANGE IN TOTAL   PRICE            =',F15.4/)
      END IF
C --------------------------------------------------------------------
      IF(MAXVAL.GT.0) DIFF=EDIFF
      IF(TOTVAL.GT.0) DIFF=TDIFF
       IF((DIFF.GT.VAL.OR.DIFF.LT.(-1*VAL)).AND.(ALSUM(1).GT.0).AND.
     *    (ALSUM(4).GT.0)) THEN
       WRITE(31,8008) BIZ,BJZ,BKC,DIFF,ALSUM(1),ALSUM(4)
 8008  FORMAT(' IZ=',I4,' JZ=',I4,' K=',I1,
     *        ' PRICE DIFF=',F10.2,' TOTAL PERSON TRIPS=',F8.4,
     *        ' MARKET SHARE=',F8.4)
       WRITE(71,8808) BIZ,BJZ,BKC,DIFF,ALSUM(1),ALSUM(4)
 8808  FORMAT(I4,',',I4,',',I2,',',F10.2,2(',',F8.4))
       IF(DIFF.GT.WMAXPRICE) THEN
       WMAXPRICE=DIFF
       WMAXP(1)=BIZ
       WMAXP(2)=BJZ
       WMAXP(3)=BKC
       END IF
       IF(DIFF.LT.WMINPRICE) THEN
       WMINPRICE=DIFF
       WMINP(1)=BIZ
       WMINP(2)=BJZ
       WMINP(3)=BKC
       END IF
       WRECNUM=WRECNUM+1
       END IF
C
C RESET TRANSIT SHARE TO BASELINE IF NEGATIVE PRICE (IF REQUESTED)
C
      IF(EDIFF.LT.0.AND.(NEG)) THEN
	ALSUM(5)=BLSUM(5)
	END IF
C
C COMPUTE BASELINE AND BUILD TRANSIT PRICE FOR MUST DRIVE MARKET
C
      EUTILB=(BLSUM(3)/(1.0-BLSUM(7)))-BLSUM(3)
      EUTILA=(ALSUM(3)/(1.0-ALSUM(7)))-ALSUM(3)
      EQVMINB=0.0
      EQVMINA=0.0
      IF(EUTILB.NE.0.0) EQVMINB=ALOG(EUTILB)/CIVT1T
      IF(EUTILA.NE.0.0) EQVMINA=ALOG(EUTILA)/CIVT1T
      EDIFF=EQVMINB-EQVMINA   
      IF(EQVMINB.EQ.0.0.OR.EQVMINA.EQ.0.0) EDIFF=0.0
C
C COMPUTE CHANGE IN TOTAL PRICE
C
      TUTILB=EUTILB+BLSUM(3)
      TUTILA=EUTILA+ALSUM(3)
      TEQVMINB=0.0
      TEQVMINA=0.0
      IF(TUTILB.NE.0.0) TEQVMINB=ALOG(TUTILB)/CIVT1T
      IF(TUTILA.NE.0.0) TEQVMINA=ALOG(TUTILA)/CIVT1T
      TDIFF=TEQVMINB-TEQVMINA
      DTPRICE=EDIFF
      DPPRICE=TDIFF
C ---------------------------------------------------------
      IF(SIZ.EQ.BIZ.AND.SJZ.EQ.BJZ) THEN
      DPERSON=BLSUM(2)*BLSUM(6)
      WRITE(26,8014) IEQUIV(BIZ),IEQUIV(BJZ),BKC,
     *               DPERSON,EUTILB,EUTILA,
     *               EQVMINB,EQVMINA,EDIFF,
     *               TUTILB,TUTILA,TEQVMINB,
     *               TEQVMINA,TDIFF
 8014 FORMAT(/' MUST DRIVE MARKET PRICE COMPUTATIONS'/
     *        ' ------------------------------------'/
     *        1X,'SELECTED IZ=',I4,' JZ=',I4,' K=',I1/
     *        1X,'PERSON TRIPS                       =',F15.4/
     *        1X,'BASE  TRANSIT EXPONENTIATED UTILITY=',E15.4/
     *        1X,'BUILD TRANSIT EXPONENTIATED UTILITY=',E15.4/
     *        1X,'BASE  EQ IVT MINUTES OF TRAVEL TIME=',F15.4/
     *        1X,'BUILD EQ IVT MINUTES OF TRAVEL TIME=',F15.4/
     *        1X,'CHANGE IN TRANSIT PRICE            =',F15.4//
     *        1X,'BASE  TOTAL   EXPONENTIATED UTILITY=',E15.4/
     *        1X,'BUILD TOTAL   EXPONENTIATED UTILITY=',E15.4/
     *        1X,'BASE  EQ IVT MINUTES OF TRAVEL TIME=',F15.4/
     *        1X,'BUILD EQ IVT MINUTES OF TRAVEL TIME=',F15.4/
     *        1X,'CHANGE IN TOTAL   PRICE            =',F15.4/)
      END IF
C ----------------------------------------------------------
      IF(MAXVAL.GT.0) DIFF=EDIFF
      IF(TOTVAL.GT.0) DIFF=TDIFF
       IF((DIFF.GT.VAL.OR.DIFF.LT.(-1*VAL)).AND.(ALSUM(1).GT.0).AND.
     *    (ALSUM(6).GT.0)) THEN
       WRITE(32,8008) BIZ,BJZ,BKC,DIFF,ALSUM(1),ALSUM(6)
       IF(DIFF.GT.DMAXPRICE) THEN
       DMAXPRICE=DIFF
       DMAXP(1)=BIZ
       DMAXP(2)=BJZ
       DMAXP(3)=BKC
       END IF
       IF(DIFF.LT.DMINPRICE) THEN
       DMINPRICE=DIFF
       DMINP(1)=BIZ
       DMINP(2)=BJZ
       DMINP(3)=BKC
       END IF
       DRECNUM=DRECNUM+1
       END IF
C
C RESET TRANSIT SHARE TO BASELINE IF NEGATIVE PRICE (IF REQUESTED)
C
      IF(EDIFF.LT.0.AND.(NEG)) THEN
	ALSUM(7)=BLSUM(7)
	END IF
C
C COMPUTE USER BENEFITS FOR REMAINING, NEW AND LOST TRANSIT RIDERS
C WALK/DRIVE MARKET SEGMENT
C
      WBENEF=WPPRICE*BLSUM(1)*BLSUM(4)
      IF(WBENEF.GE.0) THEN
      WEUSER=WTPRICE*BLSUM(1)*BLSUM(4)*BLSUM(5)
      WNUSER=(WPPRICE*BLSUM(1)*BLSUM(4))-WEUSER
      WLUSER=0.0
      WERIDERS=BLSUM(1)*BLSUM(4)*BLSUM(5)
      IF(WPPRICE.EQ.0.0) THEN
      ERIDERSW=ERIDERSW+WERIDERS
      WERIDERS=0.0
      END IF
      WNRIDERS=(BLSUM(1)*BLSUM(4)*ALSUM(5))
     *        -(BLSUM(1)*BLSUM(4)*BLSUM(5))
      WLRIDERS=0.0
C...EXCESS BENEFIT COMPUTATIONS
       XWBENEF=0.0
       IF(OUTCAP.AND.(WTPRICE.GT.MAXVAL)) THEN
       R2=(WNUSER/WNRIDERS)/WTPRICE
       XWBENEF=MAXVAL*WERIDERS+
     *         R2*MAXVAL*WNRIDERS
       XWBENEF=WBENEF-XWBENEF
       END IF
      ELSE
      WEUSER=WTPRICE*BLSUM(1)*BLSUM(4)*ALSUM(5)
      WNUSER=0.0
      WLUSER=WBENEF-WEUSER
      WERIDERS=BLSUM(1)*BLSUM(4)*ALSUM(5)
      IF(WPPRICE.EQ.0.0) THEN
      ERIDERSW=ERIDERSW+WERIDERS
      WERIDERS=0.0
      END IF
      WNRIDERS=0.0
      WLRIDERS=(BLSUM(1)*BLSUM(4)*BLSUM(5))-
     *         (BLSUM(1)*BLSUM(4)*ALSUM(5))
      END IF
      UBEN(1,1,BKC)=UBEN(1,1,BKC)+WEUSER
      UBEN(2,1,BKC)=UBEN(2,1,BKC)+WNUSER
      UBEN(3,1,BKC)=UBEN(3,1,BKC)+WLUSER
      UBEN(4,1,BKC)=UBEN(4,1,BKC)+WBENEF
      CBEN(1,BKC)=CBEN(1,BKC)+XWBENEF
      IF(BINOUT) THEN
      OBEN(BJZ,1,1,BKC)=WEUSER
      OBEN(BJZ,2,1,BKC)=WNUSER
      OBEN(BJZ,3,1,BKC)=WLUSER
      OBEN(BJZ,4,1,BKC)=WBENEF
      END IF
      XBEN(BJZ,1,BKC)=XWBENEF
      IF(WNRIDERS.GT.0.OR.WLRIDERS.GT.0) THEN
      TRID(1,1,BKC)=TRID(1,1,BKC)+WERIDERS
      TRID(1,3,BKC)=TRID(1,3,BKC)+WERIDERS
      TRID(2,1,BKC)=TRID(2,1,BKC)+WNRIDERS
      TRID(2,3,BKC)=TRID(2,3,BKC)+WNRIDERS
      TRID(3,1,BKC)=TRID(3,1,BKC)+WLRIDERS
      TRID(3,3,BKC)=TRID(3,3,BKC)+WLRIDERS
      TRID(4,1,BKC)=TRID(4,1,BKC)+WERIDERS+WNRIDERS-WLRIDERS
      TRID(4,3,BKC)=TRID(4,3,BKC)+WERIDERS+WNRIDERS-WLRIDERS
      END IF
      IF(MDEWLK(BJZ).GE.1.OR.MDEDRV(BJZ).GE.1) THEN
      NBEN(1,1,BKC)=NBEN(1,1,BKC)+WEUSER
      NBEN(2,1,BKC)=NBEN(2,1,BKC)+WNUSER
      NBEN(3,1,BKC)=NBEN(3,1,BKC)+WLUSER
      NBEN(4,1,BKC)=NBEN(4,1,BKC)+WBENEF
      ELSE
      TRPWLK=IFIX(WNRIDERS*1000.0)
      PURP=((BKC-1)*2)+1
      IF(TRPWLK.GT.0.AND.INDMTX) WRITE(35,8900) BIZ,BJZ,PURP,TRPWLK
 8900 FORMAT(2I5,I3,I7)
      IF(TRPWLK.GT.0.AND.INDMTX) WRITE(38,8903) BIZ,BJZ,BKC,WNRIDERS
 8903 FORMAT(' WALK/DRIVE MARKET BIZ=',I4,' BJZ=',I4,' BKC=',I1,
     *       ' NEW RIDERS=',F10.4)
      TRPWLK=0
      END IF
       IF(WBENEF.GT.WMAXBENEF) THEN
       WMAXBENEF=WBENEF
       WMAXB(1)=BIZ
       WMAXB(2)=BJZ
       WMAXB(3)=BKC
       END IF
       IF(WBENEF.LT.WMINBENEF) THEN
       WMINBENEF=WBENEF
       WMINB(1)=BIZ
       WMINB(2)=BJZ
       WMINB(3)=BKC
       END IF
C
C IDENTIFY TOP TEN NEGATIVE USER BENEFIT INTERCHANGES
C FOR WALK/DRIVE MARKET
C
       IF(WBENEF.LT.WMINBF(10)) THEN
       WMINBF(10)=WBENEF
       IMINB(10,1)=BIZ
       IMINB(10,2)=BJZ
       IMINB(10,3)=BKC
 7101  CSORT=.FALSE.
       DO 7100 JZ=2,10
       IF(WMINBF(JZ).LT.WMINBF(JZ-1)) THEN
       QMINBF=WMINBF(JZ)
       QIZ=IMINB(JZ,1)
       QJZ=IMINB(JZ,2)
       QKC=IMINB(JZ,3)
       WMINBF(JZ)=WMINBF(JZ-1)
       IMINB(JZ,1)=IMINB(JZ-1,1)
       IMINB(JZ,2)=IMINB(JZ-1,2)
       IMINB(JZ,3)=IMINB(JZ-1,3)
       WMINBF(JZ-1)=QMINBF
       IMINB(JZ-1,1)=QIZ
       IMINB(JZ-1,2)=QJZ
       IMINB(JZ-1,3)=QKC
       CSORT=.TRUE.
       END IF
 7100  CONTINUE
       IF(CSORT) GO TO 7101
       END IF
C
C IDENTIFY TOP TEN NEGATIVE USER BENEFIT INTERCHANGES
C FOR WALK/DRIVE MARKET FOR SELECTED ORIGIN OR DESTINATION
C
       IF(.NOT.RHETT) GO TO 7400
       IF(WBENEF.LT.ZMINBF(10).AND.
     *   ((LIZ.AND.(SIZ.EQ.BIZ)).OR.(LJZ.AND.(SJZ.EQ.BJZ)))) THEN
       ZMINBF(10)=WBENEF
       ZMINB(10,1)=BIZ
       ZMINB(10,2)=BJZ
       ZMINB(10,3)=BKC
 7401  CSORT=.FALSE.
       DO 7402 JZ=2,10
       IF(ZMINBF(JZ).LT.ZMINBF(JZ-1)) THEN
       QMINBF=ZMINBF(JZ)
       QIZ=ZMINB(JZ,1)
       QJZ=ZMINB(JZ,2)
       QKC=ZMINB(JZ,3)
       ZMINBF(JZ)=ZMINBF(JZ-1)
       ZMINB(JZ,1)=ZMINB(JZ-1,1)
       ZMINB(JZ,2)=ZMINB(JZ-1,2)
       ZMINB(JZ,3)=ZMINB(JZ-1,3)
       ZMINBF(JZ-1)=QMINBF
       ZMINB(JZ-1,1)=QIZ
       ZMINB(JZ-1,2)=QJZ
       ZMINB(JZ-1,3)=QKC
       CSORT=.TRUE.
       END IF
 7402  CONTINUE
       IF(CSORT) GO TO 7401
       END IF
C
C IDENTIFY TOP TEN POSITIVE USER BENEFIT INTERCHANGES
C FOR WALK/DRIVE MARKET FOR SELECTED ORIGIN OR DESTINATION
C
 7400  CONTINUE
       IF((WBENEF.GT.ZMINBP(10).AND.
     *   ((LIZ.AND.(SIZ.EQ.BIZ)).OR.(LJZ.AND.(SJZ.EQ.BJZ))))
     *    .OR.(WBENEF.GT.ZMINBP(10).AND.TOPTEN)) THEN
       ZMINBP(10)=WBENEF
       XMINBP(10)=WTPRICE
       ZMINP(10,1)=BIZ
       ZMINP(10,2)=BJZ
       ZMINP(10,3)=BKC
 7421  CSORT=.FALSE.
       DO 7422 JZ=2,10
       IF(ZMINBP(JZ).GT.ZMINBP(JZ-1)) THEN
       QMINBF=ZMINBP(JZ)
       QMINBX=XMINBP(JZ)
       QIZ=ZMINP(JZ,1)
       QJZ=ZMINP(JZ,2)
       QKC=ZMINP(JZ,3)
       ZMINBP(JZ)=ZMINBP(JZ-1)
       XMINBP(JZ)=XMINBP(JZ-1)
       ZMINP(JZ,1)=ZMINP(JZ-1,1)
       ZMINP(JZ,2)=ZMINP(JZ-1,2)
       ZMINP(JZ,3)=ZMINP(JZ-1,3)
       ZMINBP(JZ-1)=QMINBF
       XMINBP(JZ-1)=QMINBX
       ZMINP(JZ-1,1)=QIZ
       ZMINP(JZ-1,2)=QJZ
       ZMINP(JZ-1,3)=QKC
       CSORT=.TRUE.
       END IF
 7422  CONTINUE
       IF(CSORT) GO TO 7421
       END IF
C
C COMPUTE USER BENEFITS FOR REMAINING, NEW AND LOST TRANSIT RIDERS
C MUST DRIVE MARKET SEGMENT
C
      DBENEF=DPPRICE*BLSUM(1)*BLSUM(6)
      IF(DBENEF.GE.0) THEN
      DEUSER=DTPRICE*BLSUM(1)*BLSUM(6)*BLSUM(7)
      DNUSER=(DPPRICE*BLSUM(1)*BLSUM(6))-DEUSER
      DLUSER=0.0
      DERIDERS=BLSUM(1)*BLSUM(6)*BLSUM(7)
      IF(DPPRICE.EQ.0.0) THEN
      ERIDERSD=ERIDERSD+DERIDERS
      DERIDERS=0.0
      END IF
      DNRIDERS=(BLSUM(1)*BLSUM(6)*ALSUM(7))
     *        -(BLSUM(1)*BLSUM(6)*BLSUM(7))
      DLRIDERS=0.0
C...EXCESS BENEFIT COMPUTATIONS
       XDBENEF=0.0
       IF(OUTCAP.AND.(DTPRICE.GT.MAXVAL)) THEN
       R2=(DNUSER/DNRIDERS)/DTPRICE
       XDBENEF=MAXVAL*DERIDERS+
     *         R2*MAXVAL*DNRIDERS
       XDBENEF=DBENEF-XDBENEF
       END IF
      ELSE
      DEUSER=DTPRICE*BLSUM(1)*BLSUM(6)*ALSUM(7)
      DNUSER=0.0
      DLUSER=DBENEF-DEUSER
      DERIDERS=BLSUM(1)*BLSUM(6)*ALSUM(7)
      IF(DPPRICE.EQ.0.0) THEN
      ERIDERSD=ERIDERSD+DERIDERS
      DERIDERS=0.0
      END IF
      DNRIDERS=0.0
      DLRIDERS=(BLSUM(1)*BLSUM(6)*BLSUM(7))-
     *         (BLSUM(1)*BLSUM(6)*ALSUM(7))
      END IF
      UBEN(1,2,BKC)=UBEN(1,2,BKC)+DEUSER
      UBEN(2,2,BKC)=UBEN(2,2,BKC)+DNUSER
      UBEN(3,2,BKC)=UBEN(3,2,BKC)+DLUSER
      UBEN(4,2,BKC)=UBEN(4,2,BKC)+DBENEF
      CBEN(2,BKC)=CBEN(2,BKC)+XDBENEF
      IF(BINOUT) THEN
      OBEN(BJZ,1,2,BKC)=DEUSER
      OBEN(BJZ,2,2,BKC)=DNUSER
      OBEN(BJZ,3,2,BKC)=DLUSER
      OBEN(BJZ,4,2,BKC)=DBENEF
      END IF
      XBEN(BJZ,2,BKC)=XDBENEF
      IF(DNRIDERS.GT.0.OR.DLRIDERS.GT.0) THEN
      TRID(1,2,BKC)=TRID(1,2,BKC)+DERIDERS
      TRID(1,3,BKC)=TRID(1,3,BKC)+DERIDERS
      TRID(2,2,BKC)=TRID(2,2,BKC)+DNRIDERS
      TRID(2,3,BKC)=TRID(2,3,BKC)+DNRIDERS
      TRID(3,2,BKC)=TRID(3,2,BKC)+DLRIDERS
      TRID(3,3,BKC)=TRID(3,3,BKC)+DLRIDERS
      TRID(4,2,BKC)=TRID(4,2,BKC)+DERIDERS+DNRIDERS-DLRIDERS
      TRID(4,3,BKC)=TRID(4,3,BKC)+DERIDERS+DNRIDERS-DLRIDERS
      END IF
      IF(MDEDRV(BJZ).GE.1) THEN
      NBEN(1,2,BKC)=NBEN(1,2,BKC)+DEUSER
      NBEN(2,2,BKC)=NBEN(2,2,BKC)+DNUSER
      NBEN(3,2,BKC)=NBEN(3,2,BKC)+DLUSER
      NBEN(4,2,BKC)=NBEN(4,2,BKC)+DBENEF
      ELSE
      TRPDRV=IFIX(DNRIDERS*1000.0)
      PURP=((BKC-1)*2)+2
      IF(TRPDRV.GT.0.AND.INDMTX) WRITE(35,8900) BIZ,BJZ,PURP,TRPDRV
      IF(TRPDRV.GT.0.AND.INDMTX) WRITE(38,8904) BIZ,BJZ,BKC,DNRIDERS
 8904 FORMAT(' MUST DRIVE MARKET BIZ=',I4,' BJZ=',I4,' BKC=',I1,
     *       ' NEW RIDERS=',F10.4)
      TRPDRV=0
      END IF
C
      UBEN(1,3,BKC)=UBEN(1,3,BKC)+WEUSER+DEUSER
      UBEN(2,3,BKC)=UBEN(2,3,BKC)+WNUSER+DNUSER
      UBEN(3,3,BKC)=UBEN(3,3,BKC)+WLUSER+DLUSER
      UBEN(4,3,BKC)=UBEN(4,3,BKC)+WBENEF+DBENEF
      CBEN(3,BKC)=CBEN(3,BKC)+XWBENEF+XDBENEF
       IF(DBENEF.GT.DMAXBENEF) THEN
       DMAXBENEF=DBENEF
       DMAXB(1)=BIZ
       DMAXB(2)=BJZ
       DMAXB(3)=BKC
       END IF
       IF(DBENEF.LT.DMINBENEF) THEN
       DMINBENEF=DBENEF
       DMINB(1)=BIZ
       DMINB(2)=BJZ
       DMINB(3)=BKC
       END IF
C
C IDENTIFY TOP TEN NEGATIVE USER BENEFIT INTERCHANGES
C FOR MUST DRIVE MARKET
C
       IF(DBENEF.LT.DMINBF(10)) THEN
       DMINBF(10)=DBENEF
       IMIND(10,1)=BIZ
       IMIND(10,2)=BJZ
       IMIND(10,3)=BKC
 7301  CSORT=.FALSE.
       DO 7200 JZ=2,10
       IF(DMINBF(JZ).LT.DMINBF(JZ-1)) THEN
       QMINBF=DMINBF(JZ)
       QIZ=IMIND(JZ,1)
       QJZ=IMIND(JZ,2)
       QKC=IMIND(JZ,3)
       DMINBF(JZ)=DMINBF(JZ-1)
       IMIND(JZ,1)=IMIND(JZ-1,1)
       IMIND(JZ,2)=IMIND(JZ-1,2)
       IMIND(JZ,3)=IMIND(JZ-1,3)
       DMINBF(JZ-1)=QMINBF
       IMIND(JZ-1,1)=QIZ
       IMIND(JZ-1,2)=QJZ
       IMIND(JZ-1,3)=QKC
       CSORT=.TRUE.
       END IF
 7200  CONTINUE
       IF(CSORT) GO TO 7301
       END IF
C
C IDENTIFY TOP TEN NEGATIVE USER BENEFIT INTERCHANGES
C FOR MUST DRIVE MARKET FOR SELECTED ORIGIN OR DESTINATION
C
       IF(.NOT.RHETT) GO TO 7500
       IF(DBENEF.LT.Z2MINBF(10).AND.
     *   ((LIZ.AND.(SIZ.EQ.BIZ)).OR.(LJZ.AND.(SJZ.EQ.BJZ)))) THEN
       Z2MINBF(10)=DBENEF
       Z2MINB(10,1)=BIZ
       Z2MINB(10,2)=BJZ
       Z2MINB(10,3)=BKC
 7501  CSORT=.FALSE.
       DO 7502 JZ=2,10
       IF(Z2MINBF(JZ).LT.Z2MINBF(JZ-1)) THEN
       QMINBF=Z2MINBF(JZ)
       QIZ=Z2MINB(JZ,1)
       QJZ=Z2MINB(JZ,2)
       QKC=Z2MINB(JZ,3)
       Z2MINBF(JZ)=Z2MINBF(JZ-1)
       Z2MINB(JZ,1)=Z2MINB(JZ-1,1)
       Z2MINB(JZ,2)=Z2MINB(JZ-1,2)
       Z2MINB(JZ,3)=Z2MINB(JZ-1,3)
       Z2MINBF(JZ-1)=QMINBF
       Z2MINB(JZ-1,1)=QIZ
       Z2MINB(JZ-1,2)=QJZ
       Z2MINB(JZ-1,3)=QKC
       CSORT=.TRUE.
       END IF
 7502  CONTINUE
       IF(CSORT) GO TO 7501
       END IF
C
C IDENTIFY TOP TEN POSITIVE USER BENEFIT INTERCHANGES
C FOR MUST DRIVE MARKET FOR SELECTED ORIGIN OR DESTINATION
C
 7500  CONTINUE
       IF((DBENEF.GT.Z2MINBP(10).AND.
     *   ((LIZ.AND.(SIZ.EQ.BIZ)).OR.(LJZ.AND.(SJZ.EQ.BJZ))))
     *    .OR.(DBENEF.GT.Z2MINBP(10).AND.TOPTEN)) THEN
       Z2MINBP(10)=DBENEF
       X2MINBP(10)=DTPRICE
       Z2MINP(10,1)=BIZ
       Z2MINP(10,2)=BJZ
       Z2MINP(10,3)=BKC
 7521  CSORT=.FALSE.
       DO 7522 JZ=2,10
       IF(Z2MINBP(JZ).GT.Z2MINBP(JZ-1)) THEN
       QMINBF=Z2MINBP(JZ)
       QMINBX=X2MINBP(JZ)
       QIZ=Z2MINP(JZ,1)
       QJZ=Z2MINP(JZ,2)
       QKC=Z2MINP(JZ,3)
       Z2MINBP(JZ)=Z2MINBP(JZ-1)
       X2MINBP(JZ)=X2MINBP(JZ-1)
       Z2MINP(JZ,1)=Z2MINP(JZ-1,1)
       Z2MINP(JZ,2)=Z2MINP(JZ-1,2)
       Z2MINP(JZ,3)=Z2MINP(JZ-1,3)
       Z2MINBP(JZ-1)=QMINBF
       X2MINBP(JZ-1)=QMINBX
       Z2MINP(JZ-1,1)=QIZ
       Z2MINP(JZ-1,2)=QJZ
       Z2MINP(JZ-1,3)=QKC
       CSORT=.TRUE.
       END IF
 7522  CONTINUE
       IF(CSORT) GO TO 7521
       END IF
C --------------------------------------------------------
      IF(SIZ.EQ.BIZ.AND.SJZ.EQ.BJZ) THEN
      R1=0.0
      R2=0.0
      R3=0.0
      IF(WERIDERS.NE.0) R1=WEUSER/WERIDERS
      IF(WNRIDERS.NE.0) R2=WNUSER/WNRIDERS
      IF(WLRIDERS.NE.0) R3=WLUSER/WLRIDERS
      WRITE(26,8114) WPPRICE,WTPRICE,WBENEF,WEUSER,R1,
     *               WNUSER,R2,WLUSER,R3,
     *               WERIDERS,WNRIDERS,WLRIDERS,
     *               DPPRICE,DTPRICE,DBENEF,DEUSER,DNUSER,DLUSER,
     *               DERIDERS,DNRIDERS,DLRIDERS,
     *               MDEWLK(BJZ),MDEDRV(BJZ)
 8114 FORMAT(' SUMMARY OF USER BENEFIT COMPUTATIONS'/
     *       ' ------------------------------------'/
     *       ' WALK  MARKET - TOTAL CHANGE IN PRICE    =',E10.4/
     *       '              - TRANSIT PRICE CHANGE     =',E10.4/
     *       '              - TOTAL USER BENEFITS      =',E10.4/
     *       '              - REMAINING RIDER BENEFITS =',E10.4/
     *       '                                PER TRIP =',F10.4/
     *       '              - NEW  RIDER BENEFITS      =',E10.4/
     *       '                                PER TRIP =',F10.4/
     *       '              - LOST RIDER BENEFITS      =',E10.4/
     *       '                                PER TRIP =',F10.4/
     *       '              - REMAINING RIDERS         =',E10.4/
     *       '              - NEW RIDERS               =',E10.4/
     *       '              - LOST RIDERS              =',E10.4/
     *       ' DRIVE MARKET - TOTAL CHANGE IN PRICE    =',E10.4/
     *       '              - TRANSIT PRICE CHANGE     =',E10.4/
     *       '              - TOTAL USER BENEFITS      =',E10.4/
     *       '              - REMAINING RIDER BENEFITS =',E10.4/
     *       '              - NEW  RIDER BENEFITS      =',E10.4/
     *       '              - LOST RIDER BENEFITS      =',E10.4/
     *       '              - REMAINING RIDERS         =',E10.4/
     *       '              - NEW RIDERS               =',E10.4/
     *       '              - LOST RIDERS              =',E10.4//
     *       ' MODE INDICATOR VALUES'/
     *       ' ---------------------'/
     *       ' WALK  MARKET INDICATOR                  =',I10/
     *       ' DRIVE MARKET INDICATOR                  =',I10/)
      IF(OUTCAP) THEN
      WRITE(26,8115) XWBENEF,XDBENEF
 8115 FORMAT(' EXCESS BENEFIT VALUES'/
     *       ' ---------------------'/
     *       ' WALK  MARKET BENEFITS                   =',E10.4/
     *       ' DRIVE MARKET BENEFITS                   =',E10.4/)
      END IF
      END IF
      IF((LIZ.AND.(SIZ.EQ.BIZ)).OR.(LJZ.AND.(SJZ.EQ.BJZ))) THEN
      R1=0.0
      R2=0.0
      R3=0.0
      IF(WERIDERS.NE.0) R1=WEUSER/WERIDERS
      IF(WNRIDERS.NE.0) R2=WNUSER/WNRIDERS
      IF(WLRIDERS.NE.0) R3=WLUSER/WLRIDERS
      IF(WBENEF.NE.0.OR.DBENEF.NE.0) THEN
C     WRITE(42,8991) BIZ,BJZ,BKC,BLSUM(1)
 8991 FORMAT(' IZ=',I4,' JZ=',I4,' K=',I1,' TOTAL PERSON TRIPS',F10.4)
C     WRITE(42,8114) WPPRICE,WTPRICE,WBENEF,WEUSER,R1,
C    *               WNUSER,R2,WLUSER,R3,
C    *               WERIDERS,WNRIDERS,WLRIDERS,
C    *               DPPRICE,DTPRICE,DBENEF,DEUSER,DNUSER,DLUSER,
C    *               DERIDERS,DNRIDERS,DLRIDERS,
C    *               MDEWLK(BJZ),MDEDRV(BJZ)
      WRITE(43,8992) BIZ,BJZ,BKC,BLSUM(1),WBENEF,DBENEF
 8992 FORMAT(I4,',',I4,',',I1,',',F10.4,2(',',F12.6))
      END IF
      END IF
C ---------------------------------------------------------------------
C
C OUTPUT REVISED FILES
C
      IF(NEG) THEN
      WRITE(3) BIZ,BJZ,BKC,BLSUM
      WRITE(4) AIZ,AJZ,AKC,ALSUM
      END IF
C
C OUTPUT USER TRIP MATRICES (IF REQUESTED)
C
      IF(OUTMTX) THEN
       IF(OUTWLK) THEN
        IF(WNRIDERS.GT.0.OR.WLRIDERS.GT.0) THEN
        TPURP=(BKC-1)*3+1
        IRIDERS=IFIX(WERIDERS*10000.0)
        IF(IRIDERS.GT.0) WRITE(40,9095) BIZ,BJZ,TPURP,IRIDERS
 9095   FORMAT(2I5,I3,I7)
        TPURP=TPURP+1
        IRIDERS=IFIX(WNRIDERS*10000.0)
        IF(IRIDERS.GT.0) WRITE(40,9095) BIZ,BJZ,TPURP,IRIDERS
        TPURP=TPURP+1
        IRIDERS=IFIX(WLRIDERS*10000.0)
        IF(IRIDERS.GT.0) WRITE(40,9095) BIZ,BJZ,TPURP,IRIDERS
        END IF
       ELSE
        IF(DNRIDERS.GT.0.OR.DLRIDERS.GT.0) THEN
        TPURP=(BKC-1)*3+1
        IRIDERS=IFIX(DERIDERS*10000.0)
        IF(IRIDERS.GT.0) WRITE(40,9095) BIZ,BJZ,TPURP,IRIDERS
        TPURP=TPURP+1
        IRIDERS=IFIX(DNRIDERS*10000.0)
        IF(IRIDERS.GT.0) WRITE(40,9095) BIZ,BJZ,TPURP,IRIDERS
        TPURP=TPURP+1
        IRIDERS=IFIX(DLRIDERS*10000.0)
        IF(IRIDERS.GT.0) WRITE(40,9095) BIZ,BJZ,TPURP,IRIDERS
        END IF
       END IF
      END IF
      GO TO 1
  200 CONTINUE
      IF(NEG) GO TO 3000
      IF(MKTDIF) THEN
      WRITE(26,8805)
 8805 FORMAT(//,' **********************************************',
     *          '***************************'/
     *          ' WARNING -- TOTAL NON-CAPPED USER BENEFITS WILL',
     *          ' NOT EQUAL THE SUMMIT VALUE'/,10X,
     *          ' DIFFERENCE IN MARKET SHARE VALUES ENCOUNTERED'/
     *          ' **********************************************',
     *          '***************************'//)
      END IF
      DO K=1,2
      IF(WMAXP(K).LE.0) WMAXP(K)=4000
      IF(DMAXP(K).LE.0) DMAXP(K)=4000
      IF(WMAXB(K).LE.0) WMAXB(K)=4000
      IF(DMAXB(K).LE.0) DMAXB(K)=4000
      IF(WMINP(K).LE.0) WMINP(K)=4000
      IF(DMINP(K).LE.0) DMINP(K)=4000
      IF(WMINB(K).LE.0) WMINB(K)=4000
      IF(DMINB(K).LE.0) DMINB(K)=4000
      DO K1=1,10
      IF(IMINB(K1,K).LE.0) IMINB(K1,K)=4000
      IF(IMIND(K1,K).LE.0) IMIND(K1,K)=4000
      IF(ZMINB(K1,K).LE.0) ZMINB(K1,K)=4000
      IF(ZMINP(K1,K).LE.0) ZMINP(K1,K)=4000
      IF(Z2MINB(K1,K).LE.0) Z2MINB(K1,K)=4000
      IF(Z2MINP(K1,K).LE.0) Z2MINP(K1,K)=4000
      END DO
      END DO
      WRITE(26,8012) WRECNUM,IEQUIV(WMAXP(1)),IEQUIV(WMAXP(2)),
     *               WMAXP(3),
     *               WMAXPRICE,IEQUIV(WMINP(1)),IEQUIV(WMINP(2)),
     *               WMINP(3),WMINPRICE,
     *               DRECNUM,IEQUIV(DMAXP(1)),IEQUIV(DMAXP(2)),
     *               DMAXP(3),DMAXPRICE,
     *               IEQUIV(DMINP(1)),IEQUIV(DMINP(2)),DMINP(3),
     *               DMINPRICE
 8012 FORMAT(/,1X,I8,' RECORDS HAD WALK/DRIVE PRICE DIFF BEYOND ',
     *               'THRESHOLD'/,
     *         1X,'MAXPRICE FOUND AT IZ=',I4,' JZ=',I4,' K=',I1,
     *            ' PRICE=',F10.2/
     *         1X,'MINPRICE FOUND AT IZ=',I4,' JZ=',I4,' K=',I1,
     *            ' PRICE=',F10.2/
     *       /,1X,I8,' RECORDS HAD MUST DRIVE PRICE DIFF BEYOND ',
     *               'THRESHOLD'/,
     *         1X,'MAXPRICE FOUND AT IZ=',I4,' JZ=',I4,' K=',I1,
     *            ' PRICE=',F10.2/
     *         1X,'MINPRICE FOUND AT IZ=',I4,' JZ=',I4,' K=',I1,
     *            ' PRICE=',F10.2/)
     
      WRITE(26,8312) IEQUIV(WMAXB(1)),IEQUIV(WMAXB(2)),WMAXB(3),
     *               WMAXBENEF,IEQUIV(WMINB(1)),IEQUIV(WMINB(2)),
     *               WMINB(3),WMINBENEF,
     *               IEQUIV(DMAXB(1)),IEQUIV(DMAXB(2)),DMAXB(3),
     *               DMAXBENEF,
     *               IEQUIV(DMINB(1)),IEQUIV(DMINB(2)),DMINB(3),
     *               DMINBENEF
 8312 FORMAT(/,1X,' TOTAL USER BENEFIT SUMMARY FOR WALK/DRIVE'/,
     *         1X,'MAXBENEF FOUND AT IZ=',I4,' JZ=',I4,' K=',I1,
     *            ' VALUE=',F10.2/
     *         1X,'MINBENEF FOUND AT IZ=',I4,' JZ=',I4,' K=',I1,
     *            ' VALUE=',F10.2/
     *       /,1X,' TOAL USER BENEFIT SUMMARY FOR DRIVE ONLY'/,
     *         1X,'MAXBENEF FOUND AT IZ=',I4,' JZ=',I4,' K=',I1,
     *            ' VALUE=',F10.2/
     *         1X,'MINBENEF FOUND AT IZ=',I4,' JZ=',I4,' K=',I1,
     *            ' VALUE=',F10.2/)
      WRITE(26,9096)
 9096 FORMAT(//' TOP TEN NEGATIVE USER BENEFIT INTERCHANGES',
     *       ' FOR WALK/DRIVE ACCESS'/
     *       ' ------------------------------------------',
     *       '----------------')
      DO 7110 JZ=1,10
      WRITE(26,9097) IEQUIV(IMINB(JZ,1)),IEQUIV(IMINB(JZ,2)),
     *               IMINB(JZ,3),WMINBF(JZ)
 9097 FORMAT(' IZ=',I4,' JZ=',I4,' K=',I1,' VALUE=',F10.2)
90979 FORMAT(' IZ=',I4,' JZ=',I4,' K=',I1,' VALUE=',F10.2,
     *       '      PRICE CHANGE=',F10.2)
 7110 CONTINUE
      WRITE(26,9196)
 9196 FORMAT(//' TOP TEN NEGATIVE USER BENEFIT INTERCHANGES',
     *       ' FOR MUST DRIVE ACCESS'/
     *       ' ------------------------------------------',
     *       '----------------')
      DO 7210 JZ=1,10
      WRITE(26,9097) IEQUIV(IMIND(JZ,1)),IEQUIV(IMIND(JZ,2)),
     *               IMIND(JZ,3),DMINBF(JZ)
 7210 CONTINUE
      IF(RHETT) THEN
      IF(LIZ) QIZ=SIZ
      IF(LJZ) QIZ=SJZ
      WRITE(41,9098) IEQUIV(QIZ)
 9098 FORMAT(//' TOP TEN NEGATIVE USER BENEFIT INTERCHANGES',
     *       ' FOR WALK/DRIVE ACCESS FOR ZONE ',I4/
     *       ' ------------------------------------------',
     *       '------------------------------------')
      DO 7410 JZ=1,10
      WRITE(41,9097) IEQUIV(ZMINB(JZ,1)),IEQUIV(ZMINB(JZ,2)),
     *               ZMINB(JZ,3),ZMINBF(JZ)
 7410 CONTINUE
      WRITE(41,9198) IEQUIV(QIZ)
 9198 FORMAT(//' TOP TEN POSITIVE USER BENEFIT INTERCHANGES',
     *       ' FOR WALK/DRIVE ACCESS FOR ZONE ',I4/
     *       ' ------------------------------------------',
     *       '------------------------------------')
      DO 7420 JZ=1,10
      WRITE(41,9097) IEQUIV(ZMINP(JZ,1)),IEQUIV(ZMINP(JZ,2)),
     *               ZMINP(JZ,3),ZMINBP(JZ)
 7420 CONTINUE
      WRITE(41,9099) IEQUIV(QIZ)
 9099 FORMAT(//' TOP TEN NEGATIVE USER BENEFIT INTERCHANGES',
     *       ' FOR MUST DRIVE ACCESS FOR ZONE ',I4/
     *       ' ------------------------------------------',
     *       '------------------------------------')
      DO 7510 JZ=1,10
      WRITE(41,9097) IEQUIV(Z2MINB(JZ,1)),IEQUIV(Z2MINB(JZ,2)),
     *               Z2MINB(JZ,3),Z2MINBF(JZ)
 7510 CONTINUE
      WRITE(41,9199) IEQUIV(QIZ)
 9199 FORMAT(//' TOP TEN POSITIVE USER BENEFIT INTERCHANGES',
     *       ' FOR MUST DRIVE ACCESS FOR ZONE ',I4/
     *       ' ------------------------------------------',
     *       '------------------------------------')
      DO 7520 JZ=1,10
      WRITE(41,9097) IEQUIV(Z2MINP(JZ,1)),IEQUIV(Z2MINP(JZ,2)),
     *               Z2MINP(JZ,3),Z2MINBP(JZ)
 7520 CONTINUE
      END IF
      IF(TOPTEN) THEN
      WRITE(26,91989)
91989 FORMAT(//' TOP TEN POSITIVE USER BENEFIT INTERCHANGES',
     *       ' FOR WALK/DRIVE ACCESS'/
     *       ' ------------------------------------------',
     *       '------------------------------------')
      DO 7431 JZ=1,10
      WRITE(26,90979) IEQUIV(ZMINP(JZ,1)),IEQUIV(ZMINP(JZ,2)),
     *                ZMINP(JZ,3),ZMINBP(JZ),
     *                XMINBP(JZ)
 7431 CONTINUE
      WRITE(26,91999)
91999 FORMAT(//' TOP TEN POSITIVE USER BENEFIT INTERCHANGES',
     *       ' FOR MUST DRIVE ACCESS'/
     *       ' ------------------------------------------',
     *       '------------------------------------')
      DO 7531 JZ=1,10
      WRITE(26,90979) IEQUIV(Z2MINP(JZ,1)),IEQUIV(Z2MINP(JZ,2)),
     *     Z2MINP(JZ,3),
     *     Z2MINBP(JZ),X2MINBP(JZ)
 7531 CONTINUE
      END IF
C
C SUMMARIZE EXCESS USER BENEFITS
C
      IF(OUTCAP) THEN
      WRITE(26,8116)
 8116 FORMAT(//' SUMMARY OF EXCESS USER BENEFITS'/
     *       ' ---------------------------------'//
     *       '                      WALK/DRIVE     MUST DRIVE',
     *       '       TOTAL'/
     *       '                      ----------     ----------',
     *       '     ----------'/)
      DO 401 I=1,NCAT1
      WRITE(26,8117) I,CBEN(1,I),CBEN(2,I),CBEN(3,I)
 8117 FORMAT(' MARKET SEGM  ',I1,'        ',F10.2,5X,F10.2,5X,F10.2)
      CBEN(1,7)=CBEN(1,7)+CBEN(1,I)
      CBEN(2,7)=CBEN(2,7)+CBEN(2,I)
      CBEN(3,7)=CBEN(3,7)+CBEN(3,I)
  401 CONTINUE
      WRITE(26,8118) CBEN(1,7),CBEN(2,7),CBEN(3,7)
 8118 FORMAT(/' GRAND TOTAL           ',F10.2,5X,F10.2,5X,F10.2/)
      END IF
C
C SUMMARIZE USER BENEFITS FOR EXISTING AND NEW TRANSIT RIDERS
C
      WRITE(26,8300)
 8300 FORMAT(//' SUMMARY OF USER BENEFITS FOR REMAINING, NEW',
     *       ' AND LOST RIDERS'/
     *       ' ---------------------------------------------',
     *       '----------------'//)
      DO 400 I=1,NCAT1
      WRITE(26,8301) I,UBEN(1,1,I),UBEN(1,2,I),UBEN(1,3,I),
     *                 UBEN(2,1,I),UBEN(2,2,I),UBEN(2,3,I),
     *                 UBEN(3,1,I),UBEN(3,2,I),UBEN(3,3,I),
     *                 UBEN(4,1,I),UBEN(4,2,I),UBEN(4,3,I) 
 8301 FORMAT(' MARKET SEGM ',I1,'       WALK/DRIVE     MUST DRIVE',
     *       '       TOTAL'/
     *       '                      ----------     ----------',
     *       '     ----------'/
     *       ' REMAINING RIDERS     ',F10.2,5X,F10.2,5X,F10.2/
     *       '   NEW     RIDERS     ',F10.2,5X,F10.2,5X,F10.2/
     *       '  LOST     RIDERS     ',F10.2,5X,F10.2,5X,F10.2/
     *       '            TOTAL     ',F10.2,5X,F10.2,5X,F10.2/)
      UBEN(1,1,7)=UBEN(1,1,7)+UBEN(1,1,I)
      UBEN(1,2,7)=UBEN(1,2,7)+UBEN(1,2,I)
      UBEN(2,1,7)=UBEN(2,1,7)+UBEN(2,1,I)
      UBEN(2,2,7)=UBEN(2,2,7)+UBEN(2,2,I)
      UBEN(3,1,7)=UBEN(3,1,7)+UBEN(3,1,I)
      UBEN(3,2,7)=UBEN(3,2,7)+UBEN(3,2,I)
      UBEN(4,1,7)=UBEN(4,1,7)+UBEN(4,1,I)
      UBEN(4,2,7)=UBEN(4,2,7)+UBEN(4,2,I)
      UBEN(4,3,7)=UBEN(4,3,7)+UBEN(4,3,I)
  400 CONTINUE
      UBEN(1,3,7)=UBEN(1,1,7)+UBEN(1,2,7)
      UBEN(2,3,7)=UBEN(2,1,7)+UBEN(2,2,7)
      UBEN(3,3,7)=UBEN(3,1,7)+UBEN(3,2,7)
      WRITE(26,8302) UBEN(1,1,7),UBEN(1,2,7),UBEN(1,3,7),
     *               UBEN(2,1,7),UBEN(2,2,7),UBEN(2,3,7),
     *               UBEN(3,1,7),UBEN(3,2,7),UBEN(3,3,7),
     *               UBEN(4,1,7),UBEN(4,2,7),UBEN(4,3,7)
 8302 FORMAT(' TOTAL               WALK/DRIVE     MUST DRIVE',
     *       '        TOTAL'/
     *       '                     ----------     ----------',
     *       '      ----------'/
     *       ' REMAINING RIDERS     ',F10.2,5X,F10.2,5X,F10.2/
     *       '   NEW     RIDERS     ',F10.2,5X,F10.2,5X,F10.2/
     *       '  LOST     RIDERS     ',F10.2,5X,F10.2,5X,F10.2/
     *       '            TOTAL     ',F10.2,5X,F10.2,5X,F10.2/)
      IF(NEM) THEN
      OPEN(44,FILE=NEMFILE,STATUS='UNKNOWN',FORM='FORMATTED')
      WRITE(44,8303) UBEN(1,1,7),UBEN(1,2,7),UBEN(1,3,7),
     *               UBEN(2,1,7),UBEN(2,2,7),UBEN(2,3,7),
     *               UBEN(3,1,7),UBEN(3,2,7),UBEN(3,3,7),
     *               UBEN(4,1,7),UBEN(4,2,7),UBEN(4,3,7) 
 8303 FORMAT('TOTAL,WALK_DRIVE,MUST_DRIVE,TOTAL'/    
     *       'REMAINING_RIDERS,',F10.2,',',F10.2,',',F10.2/
     *       'NEW_RIDERS,',F10.2,',',F10.2,',',F10.2/
     *       'LOST_RIDERS,',F10.2,',',F10.2,',',F10.2/
     *       'TOTAL,',F10.2,',',F10.2,',',F10.2)      
      END IF
C
C SUMMARIZE NUMBER OF EXISTING AND NEW TRANSIT RIDERS
C
      WRITE(26,8400)
 8400 FORMAT(//' SUMMARY OF THE NUMBER OF REMAINING, NEW AND',
     *       ' LOST RIDERS'/
     *       ' ---------------------------------------------',
     *       '------------'//)
      DO 450 I=1,NCAT1
      WRITE(26,8401) I,TRID(1,1,I),TRID(1,2,I),TRID(1,3,I),
     *                 TRID(2,1,I),TRID(2,2,I),TRID(2,3,I),
     *                 TRID(3,1,I),TRID(3,2,I),TRID(3,3,I),
     *                 TRID(4,1,I),TRID(4,2,I),TRID(4,3,I) 
 8401 FORMAT(' MARKET SEGM ',I1,'      WALK/DRIVE     MUST DRIVE',
     *       '       TOTAL'/
     *       '                     ----------     ----------',
     *       '     ----------'/
     *       ' REMAINING RIDERS     ',F10.2,5X,F10.2,5X,F10.2/
     *       '   NEW     RIDERS     ',F10.2,5X,F10.2,5X,F10.2/
     *       '  LOST     RIDERS     ',F10.2,5X,F10.2,5X,F10.2/
     *       '            TOTAL     ',F10.2,5X,F10.2,5X,F10.2/)
      TRID(1,1,7)=TRID(1,1,7)+TRID(1,1,I)
      TRID(1,2,7)=TRID(1,2,7)+TRID(1,2,I)
      TRID(2,1,7)=TRID(2,1,7)+TRID(2,1,I)
      TRID(2,2,7)=TRID(2,2,7)+TRID(2,2,I)
      TRID(3,1,7)=TRID(3,1,7)+TRID(3,1,I)
      TRID(3,2,7)=TRID(3,2,7)+TRID(3,2,I)
      TRID(4,1,7)=TRID(4,1,7)+TRID(4,1,I)
      TRID(4,2,7)=TRID(4,2,7)+TRID(4,2,I)
      TRID(4,3,7)=TRID(4,3,7)+TRID(4,3,I)
  450 CONTINUE
      TRID(1,3,7)=TRID(1,1,7)+TRID(1,2,7)
      TRID(2,3,7)=TRID(2,1,7)+TRID(2,2,7)
      TRID(3,3,7)=TRID(3,1,7)+TRID(3,2,7)
      WRITE(26,8402) TRID(1,1,7),TRID(1,2,7),TRID(1,3,7),
     *               TRID(2,1,7),TRID(2,2,7),TRID(2,3,7),
     *               TRID(3,1,7),TRID(3,2,7),TRID(3,3,7),
     *               TRID(4,1,7),TRID(4,2,7),TRID(4,3,7)
 8402 FORMAT(' TOTAL               WALK/DRIVE     MUST DRIVE',
     *       '        TOTAL'/
     *       '                     ----------     ----------',
     *       '      ----------'/
     *       ' REMAINING RIDERS     ',F10.2,5X,F10.2,5X,F10.2/
     *       '   NEW     RIDERS     ',F10.2,5X,F10.2,5X,F10.2/
     *       '  LOST     RIDERS     ',F10.2,5X,F10.2,5X,F10.2/
     *       '            TOTAL     ',F10.2,5X,F10.2,5X,F10.2/)
      TERIDERS=ERIDERSW+ERIDERSD
      WRITE(26,8404) ERIDERSW,ERIDERSD,TERIDERS
 8404 FORMAT(' EXISTING RIDERS      ',F10.2,5X,F10.2,5X,F10.2,
     *       ' WITH NO CHANGE IN BENEFITS')
C
C COMPUTE USER BENEFIT/PER TRIP
C
      DO 455 I=1,4
      DO 455 J=1,3
      DO 455 K=1,7
      IF(TRID(I,J,K).GT.0) THEN
      UBPT(I,J,K)=UBEN(I,J,K)/TRID(I,J,K)
      END IF
  455 CONTINUE
C
C SUMMARIZE RATIO OF USER BENEFITS TO RIDERS
C
      WRITE(26,8500)
 8500 FORMAT(//' SUMMARY OF USER BENEFITS PER TRANSIT',
     *       ' RIDER'/
     *       ' ---------------------------------------------',
     *       '------'//)
      DO 456 I=1,NCAT1
      WRITE(26,8501) I,UBPT(1,1,I),UBPT(1,2,I),UBPT(1,3,I),
     *                 UBPT(2,1,I),UBPT(2,2,I),UBPT(2,3,I),
     *                 UBPT(3,1,I),UBPT(3,2,I),UBPT(3,3,I),
     *                 UBPT(4,1,I),UBPT(4,2,I),UBPT(4,3,I) 
 8501 FORMAT(' MARKET SEGM ',I1,'      WALK/DRIVE     MUST DRIVE',
     *       '       TOTAL'/
     *       '                     ----------     ----------',
     *       '     ----------'/
     *       ' REMAINING RIDERS     ',F10.4,5X,F10.4,5X,F10.4/
     *       '   NEW     RIDERS     ',F10.4,5X,F10.4,5X,F10.4/
     *       '  LOST     RIDERS     ',F10.4,5X,F10.4,5X,F10.4/
     *       '            TOTAL     ',F10.4,5X,F10.4,5X,F10.4/)
  456 CONTINUE
      WRITE(26,8502) UBPT(1,1,7),UBPT(1,2,7),UBPT(1,3,7),
     *               UBPT(2,1,7),UBPT(2,2,7),UBPT(2,3,7),
     *               UBPT(3,1,7),UBPT(3,2,7),UBPT(3,3,7),
     *               UBPT(4,1,7),UBPT(4,2,7),UBPT(4,3,7)
 8502 FORMAT(' TOTAL               WALK/DRIVE     MUST DRIVE',
     *       '        TOTAL'/
     *       '                     ----------     ----------',
     *       '      ----------'/
     *       ' REMAINING RIDERS     ',F10.4,5X,F10.4,5X,F10.4/
     *       '   NEW     RIDERS     ',F10.4,5X,F10.4,5X,F10.4/
     *       '  LOST     RIDERS     ',F10.4,5X,F10.4,5X,F10.4/
     *       '            TOTAL     ',F10.4,5X,F10.4,5X,F10.4/)
C
C SUMMARIZE USER BENEFITS FOR EXISTING AND NEW TRANSIT RIDERS
C BASED UPON MODAL INDICATOR MATRIX
C
      IF(INDMTX) THEN
      WRITE(26,8600)
 8600 FORMAT(//' SUMMARY OF USER BENEFITS FOR EXISTING AND NEW',
     *       ' RIDERS WITH SELECTED MODE AVAILABLE'/
     *       ' ---------------------------------------------',
     *       '------------------------------------'//)
      DO 600 I=1,NCAT1
      NBEN(1,3,I)=NBEN(1,1,I)+NBEN(1,2,I)
      NBEN(2,3,I)=NBEN(2,1,I)+NBEN(2,2,I)
      NBEN(3,3,I)=NBEN(3,1,I)+NBEN(3,2,I)
      NBEN(4,3,I)=NBEN(4,1,I)+NBEN(4,2,I)
      WRITE(26,8601) I,NBEN(1,1,I),NBEN(1,2,I),NBEN(1,3,I),
     *                 NBEN(2,1,I),NBEN(2,2,I),NBEN(2,3,I),
     *                 NBEN(3,1,I),NBEN(3,2,I),NBEN(3,3,I),
     *                 NBEN(4,1,I),NBEN(4,2,I),NBEN(4,3,I) 
 8601 FORMAT(' MARKET SEGM ',I1,'      WALK/DRIVE     MUST DRIVE',
     *       '       TOTAL'/
     *       '                     ----------     ----------',
     *       '     ----------'/
     *       ' REMAINING RIDERS     ',F10.2,5X,F10.2,5X,F10.2/
     *       '   NEW     RIDERS     ',F10.2,5X,F10.2,5X,F10.2/
     *       '  LOST     RIDERS     ',F10.2,5X,F10.2,5X,F10.2/
     *       '            TOTAL     ',F10.2,5X,F10.2,5X,F10.2/)
      NBEN(1,1,7)=NBEN(1,1,7)+NBEN(1,1,I)
      NBEN(1,2,7)=NBEN(1,2,7)+NBEN(1,2,I)
      NBEN(2,1,7)=NBEN(2,1,7)+NBEN(2,1,I)
      NBEN(2,2,7)=NBEN(2,2,7)+NBEN(2,2,I)
      NBEN(3,1,7)=NBEN(3,1,7)+NBEN(3,1,I)
      NBEN(3,2,7)=NBEN(3,2,7)+NBEN(3,2,I)
      NBEN(4,1,7)=NBEN(4,1,7)+NBEN(4,1,I)
      NBEN(4,2,7)=NBEN(4,2,7)+NBEN(4,2,I)
      NBEN(4,3,7)=NBEN(4,3,7)+NBEN(4,3,I)
  600 CONTINUE
      NBEN(1,3,7)=NBEN(1,1,7)+NBEN(1,2,7)
      NBEN(2,3,7)=NBEN(2,1,7)+NBEN(2,2,7)
      NBEN(3,3,7)=NBEN(3,1,7)+NBEN(3,2,7)
      WRITE(26,8602) NBEN(1,1,7),NBEN(1,2,7),NBEN(1,3,7),
     *               NBEN(2,1,7),NBEN(2,2,7),NBEN(2,3,7),
     *               NBEN(3,1,7),NBEN(3,2,7),NBEN(3,3,7),
     *               NBEN(4,1,7),NBEN(4,2,7),NBEN(4,3,7)
 8602 FORMAT(' TOTAL               WALK/DRIVE     MUST DRIVE',
     *       '        TOTAL'/
     *       '                     ----------     ----------',
     *       '      ----------'/
     *       ' REMAINING RIDERS     ',F10.2,5X,F10.2,5X,F10.2/
     *       '   NEW     RIDERS     ',F10.2,5X,F10.2,5X,F10.2/
     *       '  LOST     RIDERS     ',F10.2,5X,F10.2,5X,F10.2/
     *       '            TOTAL     ',F10.2,5X,F10.2,5X,F10.2/)
      WRITE(37,8603) NBEN(4,3,6)
 8603 FORMAT(' LRT USER BENEFITS FOR TOTAL RIDERS=',F10.2)
C
C COMPUTE USER BENEFIT/PER TRIP
C
      DO 457 I=1,4
      DO 457 J=1,3
      DO 457 K=1,7
      IF(UBEN(I,J,K).NE.0) THEN
      NBPT(I,J,K)=NBEN(I,J,K)/UBEN(I,J,K)
      END IF
  457 CONTINUE
C
C SUMMARIZE PERCENT OF USER BENEFITS WITH PRIMARY MODE AVAILABLE
C
      WRITE(26,8700)
 8700 FORMAT(//' SUMMARY OF PERCENT OF USER BENEFITS WITH PRIMARY',
     *       ' MODE AVAILABLE'/
     *       ' --------------------------------------------------',
     *       '---------------'//)
      DO 458 I=1,NCAT1
      WRITE(26,8501) I,NBPT(1,1,I),NBPT(1,2,I),NBPT(1,3,I),
     *                 NBPT(2,1,I),NBPT(2,2,I),NBPT(2,3,I),
     *                 NBPT(3,1,I),NBPT(3,2,I),NBPT(3,3,I),
     *                 NBPT(4,1,I),NBPT(4,2,I),NBPT(4,3,I) 
  458 CONTINUE
      WRITE(26,8502) NBPT(1,1,7),NBPT(1,2,7),NBPT(1,3,7),
     *               NBPT(2,1,7),NBPT(2,2,7),NBPT(2,3,7),
     *               NBPT(3,1,7),NBPT(3,2,7),NBPT(3,3,7),
     *               NBPT(4,1,7),NBPT(4,2,7),NBPT(4,3,7)
      END IF  
C
C SUMMARIZE ORIGIN ZONES THAT CONTAIN NT-TRANSIT
C
      WRITE(26,8112)
8112  FORMAT(//' THE FOLLOWING ORIGIN ZONES HAVE AT LEAST ',
     *       ' ONE DESTINATION ZONE THAT SHIFTS FROM NT TO ',
     *       ' CW OR MD'/
     *       ' -----------------------------------------',
     *       '-----------------------------------------',
     *       '------------')  
      J=0
      DO 300 I=1,6000
      IF(NTRN(I,1).GT.0) THEN
      J=J+1
      HOLD(J)=I
      END IF
      IF(J.EQ.10) THEN
      WRITE(26,8113) HOLD
 8113 FORMAT(5X,10I5)
      DO 210 J=1,10
      HOLD(J)=0
  210 CONTINUE
      J=0
      END IF
  300 CONTINUE
      IF(J.GT.0) WRITE(26,8113) (HOLD(K),K=1,J)
C
C SUMMARIZE DESTINATION ZONES THAT CONTAIN NT-TRANSIT
C
      DO 302 J=1,10
      HOLD(J)=0
  302 CONTINUE
      WRITE(26,8119)
 8119 FORMAT(//' THE FOLLOWING DESTINATION ZONES HAVE AT LEAST ',
     *       ' ONE ORIGIN ZONE THAT SHIFTS FROM NT TO ',
     *       ' CW OR MD'/
     *       ' -----------------------------------------',
     *       '-----------------------------------------',
     *       '------------')  
      J=0
      DO 301 I=1,6000
      IF(NTRN(I,2).GT.0) THEN
      J=J+1
      HOLD(J)=I
      END IF
      IF(J.EQ.10) THEN
      WRITE(26,8113) HOLD
      DO 211 J=1,10
      HOLD(J)=0
  211 CONTINUE
      J=0
      END IF
  301 CONTINUE
      IF(J.GT.0) WRITE(26,8113) (HOLD(K),K=1,J)
C
C SUMMARIZE ZONES WITH DIFFERENCES IN PERCENT WALK
C
      NZON2=0.90*NZON1
      K=1
      DO 8800 I=1,NZON1
      IF(MKDIFF(I,1,1).GT.NZON2.AND.MKDIFF(I,2,1).GT.NZON2.AND.
     *   MKDIFF(I,2,1).GT.NZON2.AND.MKDIFF(I,2,2).GT.NZON2) THEN
      MKZONE(K)=I
      K=K+1
      END IF
 8800 CONTINUE
      WRITE(26,8801)
 8801 FORMAT(//' THE FOLLOWING ZONES ARE POTENTIAL ZONES ',
     *       ' WITH A DIFFERENCE IN PERCENT WALK'/
     *       ' -----------------------------------------',
     *       '----------------------------------')
      K=K-1
      IF(K.GT.0) WRITE(26,8802) (MKZONE(K1),K1=1,K)
 8802 FORMAT(5X,10I5) 
 3000 CONTINUE 
      CALL GETTIM(IHR,IMIN,ISEC,I100)
      WRITE(26,8104) IHR,IMIN,ISEC
      WRITE(*,8104) IHR,IMIN,ISEC
 8104 FORMAT(/' Program Completed: ',I2,':',I2,':',I2)
      END
C**********************************************************
C   SUBROUTINE RDFILES: OBTAIN DATA SET NAMES FOR INPUT   *
C                       FILES                             *
C**********************************************************
      SUBROUTINE RDFILES(CTLERR,INDMTX,BASECASE,BUILDCASE,
     *                   LRTIND,TRPOUT,USROUT,CAPOUT,OUTCAP,
     *                   FDISTEQ,IEQUIV,EQUIV,NEMFILE,NEM,
     *                   DFILTER,SFILTER)
      LOGICAL      CTLERR,INDMTX,OUTCAP,NEM
      INTEGER*4    IT,ST,TT,UT,VT,XT,LEN(11),RLEN,IEQUIV(6000)
      INTEGER*4    INDEX,ZONE,EQUIV(10000)
      INTEGER*4    DFILTER(50,50),DVALUE,PDIST,DDIST
      CHARACTER*1  COMMA,BLANK
      CHARACTER*10 FILES(11)
      CHARACTER*80 NAMES(11)
      CHARACTER*80 STRING
	    CHARACTER*80 BASECASE,BUILDCASE,LRTIND,TRPOUT,USROUT
	    CHARACTER*80 REPORT,CAPOUT,FDISTEQ,FEQUIV,NEMFILE,FILTER
	    LOGICAL      EXISTS,SFILTER
      DATA         COMMA/','/,BLANK/' '/
      DATA         FILES/'BASECASE=','BUILDCASE=','LRTIND=',
     *                   'TRPOUT=','USROUT=','REPORT=',
     *                   'CAPOUT=','FDISTEQ=','FEQUIV=',
     *                   'NEMFILE=','FILTER='/
      DATA         NAMES/11*' '/
      DATA         LEN/8,9,6,6,6,6,6,7,6,7,6/
      CTLERR=.FALSE.
      NEM=.FALSE.
      SFILTER=.FALSE.
      DFILTER=0
C
C SEARCH FOR ONE FILE NAME AT A TIME
C
      DO 100 IT=1,11
      REWIND 10
    1 READ(10,101,END=100) STRING
  101 FORMAT(A80)
      RLEN=80-LEN(IT)
      DO 200 ST=1,RLEN
      TT=ST+LEN(IT)
      IF(STRING(ST:TT).EQ.FILES(IT)) THEN
C
C NOW SEARCH FOR COMMA
C
      DO 300 UT=TT,80
      IF((STRING(UT:UT).EQ.COMMA).OR.(STRING(UT:UT).EQ.BLANK)) THEN
      VT=TT+2
      XT=UT-2
      NAMES(IT)=STRING(VT:XT)
      GO TO 100
      END IF
  300 CONTINUE
      END IF
  200 CONTINUE
      GO TO 1
  100 CONTINUE
C
C SET FILE NAMES TO INPUT STRINGS RECEIVED
C
      BASECASE=NAMES(1)
      BUILDCASE=NAMES(2)
      LRTIND=NAMES(3)
      TRPOUT=NAMES(4)
      USROUT=NAMES(5)
      REPORT=NAMES(6)
      CAPOUT=NAMES(7)
      FDISTEQ=NAMES(8)
      FEQUIV=NAMES(9)
      NEMFILE=NAMES(10)
      FILTER=NAMES(11)
      OPEN(26,FILE=REPORT,STATUS='UNKNOWN',
     *        FORM='FORMATTED')
C
C WRITE PROGRAM BANNER, DATE & TIME
C
      CALL GETDAT(IYR,IMON,IDAY)
      CALL GETTIM(IHR,IMIN,ISEC,I100)
      IF(IYR.GT.2019) THEN
 9901 FORMAT(/5x,' *** PROGRAM PERMISSION DATE HAS EXPIRED ***'/)
      WRITE(*,9901)
      STOP
      END IF
      IYR=IYR-2000
      WRITE(26,9006)IMON,IDAY,IYR,IHR,IMIN,ISEC
 9006 FORMAT(/1X,'     TRANSIT USER BENEFIT'/
     *        1X,'  DATA INPUT COMPARISON PROGRAM'/
     *        1X,'        PROGRAM: USERBENC'/
     *        1X,'        VERSION:  12Aug19'//
     *        1X,'        Date:',I2,'/',I2,'/',I2/
     *        1X,'        Time:',I2,':',I2,':',I2//)
      WRITE(*,9006) IMON,IDAY,IYR,IHR,IMIN,ISEC
C 
C PRINT FILE INPUT/OUTPUT SUMMARY
C
      WRITE(26,500) BASECASE,BUILDCASE,LRTIND,TRPOUT,USROUT,REPORT,
     *              CAPOUT,FDISTEQ,FEQUIV,NEMFILE,FILTER
  500 FORMAT(1X,'SUMMARY OF FILE INPUTS & OUTPUTS'/
     *       1X,'--------------------------------------------------'/
     *       1X,'BASECASE   ',a20,' BASELINE USER BENEFIT FILE'/
     *       1X,'BUILDCASE  ',a20,' BUILD    USER BENEFIT FILE'/
     *       1X,'LRTIND     ',a20,' PRIMARY MODE INDICATOR FILE'/
     *       1X,'TRPOUT     ',a20,' EXISTING, NEW, AND LOST RIDER',
     *                            ' OUTPUT MATRIX'/
     *       1X,'USROUT     ',a20,' USER BENEFIT OUTPUT MATRIX'/,
     *       1X,'REPORT     ',A20,' STANDARD REPORT FILE'/
     *       1X,'CAPOUT     ',A20,' CAPPED BENEFIT MATRIX'/
     *       1X,'FDISTEQ    ',A20,' DISTRICT/ZONE EQUIVALENCE FILE'/
     *       1X,'FEQUIV     ',A20,' EMME ZONE EQUIVALENCE'/
     *       1X,'NEMFILE    ',A20,' TOTAL USER BENEFIT CSV FILE'/
     *       1X,'FILTER     ',A20,' DISTRICT LEVEL FILTER FILE (CSV)')
C
C CHECK FOR PRESENCE OF PRIMARY MODE INDICATOR FILE ?
C
      IF(NAMES(3).NE.BLANK) THEN
      INDMTX=.TRUE.
      ELSE     
      INDMTX=.FALSE.
      WRITE(26,8002)
 8002 FORMAT(/1X,'RDFILES(W) 8002 FIXED-GUIDEWAY INDICATOR MATRIX',
     *           ' UNAVAILABLE'/)
      END IF
      IF(NAMES(7).NE.BLANK) THEN
      OUTCAP=.TRUE.
      ELSE
      OUTCAP=.FALSE.
      END IF
      IF(NAMES(10).NE.BLANK) THEN
      NEM=.TRUE.
      ELSE
      NEM=.FALSE.
      END IF
c
c external/internal zone equivalence
c
      inquire(file=fequiv,exist=exists)
      if(.not.exists) then
      do k=1,6000
      iequiv(k)=k
      equiv(k)=k
      end do
      iequiv(6000)=0
      else
      open(1,file=fequiv,status='old',form='formatted')
      read(1,2) header
    2 format(a80)
  600 read(1,*,end=700) index,zone  
      iequiv(index+1)=zone
      equiv(zone)=index+1
      go to 600
  700 continue
      close(1,status='keep')
      end if
c
c district level filter file
c
      inquire(file=filter,exist=exists)
      if(exists) then
      sfilter=.true.
      open(1,file=filter,status='old',form='formatted')
  601 read(1,*,end=701) pdist,ddist,dvalue
  602 format(i2,i3,i2)
      if(pdist.le.0.or.pdist.gt.50.or.ddist.le.0.or.ddist.gt.50) then
      write(26,603) pdist,ddist
  603 format(' RDFILE 603 (F) ORIGIN DISTRICT(',I3,
     * ') OR DESTINATION DISTRICT(',I3,') IS OUT OF RANGE')
      stop 603
      end if
      dfilter(pdist,ddist)=dvalue
      go to 601
  701 continue
      close(1,status='keep')
      end if
      RETURN
      END
